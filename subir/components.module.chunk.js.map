{"version":3,"sources":["/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components-routing.module.ts","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components.component.ts","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components.module.ts","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.html","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.scss","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.ts","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/tree/tree.component.html","/Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/tree/tree.component.ts","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/index.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/captured-node.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/draggable.events.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/node-draggable.directive.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/node-draggable.service.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/editable/editable.events.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/editable/node-editable.directive.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/menu.events.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/node-menu.component.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/node-menu.service.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/rxjs-imports.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree-controller.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree-internal.component.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.component.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.events.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.module.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.service.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.types.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/event.utils.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/fn.utils.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/safe-html.pipe.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/rxjs/_esm5/add/operator/filter.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/lib/bytesToUuid.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/lib/rng-browser.js","/Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/v4.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEM;AACP;AAC2B;AAEjF,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kFAAmB;QAC9B,QAAQ,EAAE;YACV;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,2EAAa;aACzB,EAAE;gBACD,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,sGAAsB;aAClC;SACA;KACF,CAAC,CAAC;AAMH;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QAJnC,+DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,qEAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,qEAAY,CAAC;SACxB,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;AAE7B,IAAM,gBAAgB,GAAG;IAC9B,kFAAmB;IACnB,2EAAa;IACb,sGAAsB;CACvB,CAAC;;;;;;;;;;;;;;;;;AC/BwC;AAQ1C;IAAA;IACA,CAAC;IADY,mBAAmB;QAN/B,gEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,QAAQ,EAAE,2CAET;SACF,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;;;;;;;;;;;;ACRS;AAEH;AACW;AAEO;AACgC;AAaxF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAX5B,+DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,wEAAW;gBACX,2FAAuB;gBACvB,oDAAU;gBACV,uEAAa;aACd;YACD,YAAY,EACP,oFAAgB,QACpB;SACF,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;ACnB7B,kgBAAkgB,YAAY,wMAAwM,KAAK,yUAAyU,iBAAiB,gNAAgN,MAAM,oxCAAoxC,QAAQ,8KAA8K,KAAK,mzB;;;;;;;ACA1tF;AACA;;;AAGA;AACA,ozFAAqzF,uDAAuD,qDAAqD,8BAA8B,EAAE,8DAA8D,8BAA8B,EAAE,oGAAoG,eAAe,EAAE,+BAA+B,yDAAyD,2BAA2B,EAAE,EAAE,qCAAqC,uDAAuD,oDAAoD,8BAA8B,EAAE,6DAA6D,8BAA8B,EAAE,mGAAmG,eAAe,EAAE,+BAA+B,wDAAwD,2BAA2B,EAAE,EAAE;;AAElwH;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACX0C;AAC8C;AAErC;AAOnD;IACE,gCAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAIlD,aAAQ,GAAG,iBAAiB,CAAC;QAC7B,kBAAa,GAAG,MAAM,CAAC;QACvB,UAAK,GAAG,WAAW,CAAC;QACpB,YAAO,GAAG,mBAAmB,CAAC;QAC9B,YAAO,GAAG,IAAI,CAAC;QACf,gBAAW,GAAG,CAAC,CAAC;QAChB,SAAI,GAAG,SAAS,CAAC;QAEjB,kBAAa,GAAG,IAAI,CAAC;QACrB,kBAAa,GAAG,IAAI,CAAC;QACrB,0BAAqB,GAAG,KAAK,CAAC;QAC9B,kBAAa,GAAG,IAAI,CAAC;QAErB,UAAK,GAAa,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;QACrE,eAAU,GAAa,CAAC,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QAC/E,cAAS,GAAa,CAAC,sBAAsB,EAAE,yBAAyB,EAAE,gBAAgB,EAAE,kBAAkB;YAC5G,iBAAiB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,cAAc,CAAC,CAAC;QAEvG,WAAM,GAAG;YACP,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,2BAA2B,EAAE;YAClD,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,8BAA8B,EAAE;YACrD,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,cAAc,EAAE;YACrC,EAAE,KAAK,EAAE,uBAAuB,EAAE,IAAI,EAAE,+BAA+B,EAAE;SAC1E,CAAC;IA3BmD,CAAC;IA6BtD,0CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,gDAAe,GAAf;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAChE,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAClE,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAEtC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;IAEO,0CAAS,GAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,IAAY;QACzD,IAAI,CAAC,MAAM,GAAG,IAAI,uEAAa,CAAC;YAC9B,aAAa,EAAE,IAAI,CAAC,QAAQ;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,YAAY,EAAE,IAAI,CAAC,aAAa;YAChC,iBAAiB,EAAE,IAAI,CAAC,qBAAqB;YAC7C,SAAS,EAAE,IAAI,CAAC,aAAa;YAC7B,KAAK,EAAE,IAAI,CAAC,WAAW;SACxB,CAAC,CAAC;QACH,IAAM,KAAK,GAAU;YACnB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,eAAe,EAAE,IAAI,CAAC,aAAa;YACnC,cAAc,EAAE,wEAAc,CAAC,WAAW;SAC3C,CAAC;QACF,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;IAC9B,CAAC;IAlEU,sBAAsB;QALlC,gEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAEoC,wEAAc;OADvC,sBAAsB,CAmElC;IAAD,6BAAC;CAAA;AAnEkC;;;;;;;;ACVnC,sP;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAJA;QAME,SAAI,GAAc;YAChB,KAAK,EAAE,+CAA+C;YACtD,QAAQ,EAAE,CAAC;oBACT,KAAK,EAAE,6BAA6B;oBACpC,QAAQ,EAAE,CAAC;4BACT,KAAK,EAAE,MAAM;yBACd,EAAE;4BACD,KAAK,EAAE,KAAK;yBACb,EAAE;4BACD,KAAK,EAAE,IAAI;yBACZ,CAAC;iBACH,EAAE;oBACD,KAAK,EAAE,6BAA6B;oBACpC,QAAQ,EAAE,CAAC;4BACT,KAAK,EAAE,YAAY;yBACpB,EAAE;4BACD,KAAK,EAAE,cAAc;yBACtB,EAAE;4BACD,KAAK,EAAE,KAAK;yBACb,CAAC;iBACH,CAAC;SACH,CAAC;IAEJ,CAAC;IAzBY,aAAa;QAJzB,gEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;SAErB,CAAC;OACW,aAAa,CAyBzB;IAAD,oBAAC;CAAA;AAzByB;;;;;;;;;ACP1B;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;ACxBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA,yC;;;;;;;;ACjCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,4C;;;;;;;;ACVA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,kBAAkB,EAAE;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,wCAAwC,kDAAkD,IAAI;AACvG,SAAS,oEAAoE,8EAA8E,IAAI;AAC/J,SAAS,uCAAuC,iDAAiD,IAAI;AACrG,MAAM;AACN;AACA,2BAA2B,qBAAqB;AAChD,kBAAkB,qBAAqB;AACvC;AACA;AACA,CAAC;AACD;AACA,oD;;;;;;;;AC1GA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,uDAAuD,WAAW;AAClE;AACA,CAAC;AACD;AACA,kD;;;;;;;;AChCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,CAAC,oGAAoG;AACrG,2C;;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA,gCAAgC,oCAAoC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,uCAAuC,iDAAiD,IAAI;AACrG,SAAS,wCAAwC,kDAAkD,IAAI;AACvG,MAAM;AACN;AACA,uBAAuB,8CAA8C;AACrE,0BAA0B,sBAAsB;AAChD,2BAA2B,6EAA6E;AACxG,yCAAyC,sEAAsE;AAC/G,2BAA2B,kDAAkD;AAC7E;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;ACnDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E,uC;;;;;;;;ACdA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,kBAAkB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qTAAqT,mBAAmB,4DAA4D,eAAe;AACnZ,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD;AACpD,SAAS,uCAAuC,iDAAiD,IAAI;AACrG,SAAS,0DAA0D,oEAAoE,IAAI;AAC3I,MAAM;AACN;AACA,8BAA8B,sBAAsB;AACpD,uBAAuB,qBAAqB;AAC5C,2BAA2B,mDAAmD;AAC9E;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;AC/EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,kCAAkC,kDAAkD,EAAE;AACtF,kCAAkC,wDAAwD,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;AACD;AACA,6C;;;;;;;;AChCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,wC;;;;;;;;ACPA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,0CAA0C;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iCAAiC;AACvE;AACA;AACA,2CAA2C,8DAA8D;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2C;;;;;;;;AC5EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oCAAoC,iCAAiC,EAAE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iCAAiC,EAAE;AACtkFAAkF,yBAAyB,0EAA0E,yBAAyB,w1BAAw1B,uBAAuB;AAC7jC,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,6CAA6C;AACtD,SAAS,oCAAoC;AAC7C,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,kBAAkB,qBAAqB;AACvC,sBAAsB,qBAAqB;AAC3C,sBAAsB,qBAAqB;AAC3C;AACA;AACA,CAAC;AACD;AACA,mD;;;;;;;;ACvLA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iCAAiC,EAAE;AACtF;AACA,gDAAgD,YAAY;AAC5D;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,iDAAiD,2DAA2D,IAAI;AACzH,MAAM;AACN;AACA,uBAAuB,sCAAsC;AAC7D,sBAAsB,qBAAqB;AAC3C,yBAAyB,sBAAsB;AAC/C,yBAAyB,sBAAsB;AAC/C,yBAAyB,sBAAsB;AAC/C,0BAA0B,sBAAsB;AAChD,uBAAuB,sBAAsB;AAC7C,0BAA0B,sBAAsB;AAChD,2BAA2B,sBAAsB;AACjD,8BAA8B,sBAAsB;AACpD,2BAA2B,sBAAsB;AACjD,2BAA2B,mDAAmD;AAC9E,sBAAsB,yDAAyD;AAC/E;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;ACjGA;AACA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAcuC;;;;;;;;AC5GA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA,eAAe,UAAU;AACzB,eAAe,KAAK;AACpB,eAAe,QAAQ;AACvB;AACA;AACA,gCAAgC,eAAe;AAC/C,kCAAkC,kBAAkB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,+BAA+B,EAAE;AAClH;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,GAAG,sDAAsD;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,+BAA+B,EAAE;AAC9G;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,+BAA+B,EAAE;AACrG;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B,mBAAmB,KAAK;AACxB;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB,iBAAiB,UAAU;AAC3B,mBAAmB,KAAK;AACxB;AACA;AACA,+BAA+B,UAAU,aAAa;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,KAAK;AACpB;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA,mBAAmB,KAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAiD;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,eAAe;AAClH,eAAe,KAAK;AACpB;AACA;AACA;AACA,qGAAqG,eAAe;AACpH,iBAAiB,KAAK;AACtB;AACA;AACA;AACA,qGAAqG,eAAe;AACpH,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA,oEAAoE,uBAAuB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,uCAAuC,YAAY;AACnD;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA,mDAAmD,qBAAqB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB;AAC7D;AACA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA,8CAA8C,iBAAiB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA,8DAA8D,IAAI,eAAe;AACjF;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,gC;;;;;;;;ACx5BA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;AACD;AACA,uC;;;;;;;;ACrCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wCAAwC,EAAE;AAC5F;AACA;AACA,uDAAuD,wBAAwB,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6BAA6B,EAAE;AACjE,kCAAkC,wCAAwC,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B;AACnC;AACA;AACA,8CAA8C;AAC9C,SAAS,oEAAoE,8EAA8E,IAAI;AAC/J,MAAM;AACN;AACA,CAAC;AACD;AACA,wC;;;;;;;;ACzGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,yCAAyC,6EAA6E,4EAA4E;AAClM;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D,sC;;;;;;;;ACpCA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,CAAC,2CAA2C;AAC5C;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;ACvBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gBAAgB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;ACtGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,4BAA4B,mBAAmB,IAAI;AAC5D;AACA;AACA,+CAA+C;AAC/C,SAAS,yCAAyC;AAClD,MAAM;AACN;AACA,CAAC;AACD;AACA,0C;;;;;;;;;;ACtBA;AAAA;AACqB;AACJ;AACjB;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C;AAC9C;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;AChCA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA;;AAEA","file":"components.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ComponentsComponent } from './components.component';\nimport { TreeComponent } from './tree/tree.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ComponentsComponent,\n  children: [\n  {\n    path: 'tree',\n    component: TreeComponent,\n  }, {\n    path: 'notifications',\n    component: NotificationsComponent,\n  },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComponentsRoutingModule { }\n\nexport const routedComponents = [\n  ComponentsComponent,\n  TreeComponent,\n  NotificationsComponent,\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components-routing.module.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngx-components',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ComponentsComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components.component.ts","import { NgModule } from '@angular/core';\n\nimport { TreeModule } from 'ng2-tree';\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { ThemeModule } from '../../@theme/theme.module';\nimport { ComponentsRoutingModule, routedComponents } from './components-routing.module';\n\n@NgModule({\n  imports: [\n    ThemeModule,\n    ComponentsRoutingModule,\n    TreeModule,\n    ToasterModule,\n  ],\n  declarations: [\n    ...routedComponents,\n  ],\n})\nexport class ComponentsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/components.module.ts","module.exports = \"<nb-card>\\n  <nb-card-header>\\n    Toaster configuration\\n  </nb-card-header>\\n  <nb-card-body>\\n    <toaster-container [toasterconfig]=\\\"config\\\"></toaster-container>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Place to show toast:</label>\\n          <div class=\\\"dropdown\\\" ngbDropdown>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ngbDropdownToggle>\\n              {{ position }}\\n            </button>\\n            <ul ngbDropdownMenu class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let p of positions\\\" (click)=\\\"position = p\\\">\\n                {{ p }}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Animation type:</label>\\n          <div class=\\\"dropdown\\\" ngbDropdown>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ngbDropdownToggle>\\n              {{ animationType }}\\n            </button>\\n            <ul ngbDropdownMenu class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let at of animations\\\" (click)=\\\"animationType = at\\\">\\n                {{ at }}\\n              </li>\\n            </ul>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Title:</label>\\n          <input class=\\\"form-control\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\">\\n        </div>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Content:</label>\\n            <input class=\\\"form-control\\\" [(ngModel)]=\\\"content\\\" name=\\\"content\\\">\\n          </div>\\n        </form>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Time to hide toast, ms. 0 to persistent toast:</label>\\n          <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"timeout\\\"name=\\\"timeout\\\">\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Limit number of toasts:</label>\\n          <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"toastsLimit\\\" name=\\\"limit\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-control-label\\\">Toast type:</label>\\n          <div class=\\\"dropdown\\\" ngbDropdown>\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" ngbDropdownToggle>\\n              {{ type }}\\n            </button>\\n            <ul ngbDropdownMenu class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-item\\\" *ngFor=\\\"let t of types\\\" (click)=\\\"type = t\\\">{{ t }}</li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n        <div><nb-checkbox [(ngModel)]=\\\"isNewestOnTop\\\">Newest on top</nb-checkbox></div>\\n        <div><nb-checkbox [(ngModel)]=\\\"isHideOnClick\\\">Hide on click</nb-checkbox></div>\\n        <div><nb-checkbox [(ngModel)]=\\\"isDuplicatesPrevented\\\">Prevent arising of duplicate toast</nb-checkbox></div>\\n        <div><nb-checkbox [(ngModel)]=\\\"isCloseButton\\\">Close button</nb-checkbox></div>\\n      </div>\\n    </div>\\n  </nb-card-body>\\n\\n  <nb-card-footer>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"makeToast()\\\">Show toast</button>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"openRandomToast()\\\">Random toast</button>\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"clearToasts()\\\">Clear all toasts</button>\\n  </nb-card-footer>\\n</nb-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.html\n// module id = ../../../../../src/app/pages/components/notifications/notifications.component.html\n// module chunks = components.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This is a starting point where we declare the maps of themes and globally available functions/mixins\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n/**\\n * This mixin generates keyfames.\\n * Because of all keyframes can't be scoped,\\n * we need to puts unique name in each btn-pulse call.\\n */\\n/**\\n * @license\\n * Copyright Akveo. All Rights Reserved.\\n * Licensed under the MIT License. See License.txt in the project root for license information.\\n */\\n:host-context(.nb-theme-default) {\\n  /* stylelint-disable */\\n  /* stylelint-enable */ }\\n  :host-context(.nb-theme-default) nb-card-footer {\\n    padding-bottom: 0.25rem; }\\n    :host-context(.nb-theme-default) nb-card-footer button {\\n      margin: 0 1rem 1rem 0; }\\n  :host-context(.nb-theme-default) toaster-container /deep/ #toast-container .toast-close-button {\\n    right: 0; }\\n  @media (max-width: 399px) {\\n    :host-context(.nb-theme-default) .dropdown-toggle {\\n      font-size: 0.75rem; } }\\n\\n:host-context(.nb-theme-cosmic) {\\n  /* stylelint-disable */\\n  /* stylelint-enable */ }\\n  :host-context(.nb-theme-cosmic) nb-card-footer {\\n    padding-bottom: 0.25rem; }\\n    :host-context(.nb-theme-cosmic) nb-card-footer button {\\n      margin: 0 1rem 1rem 0; }\\n  :host-context(.nb-theme-cosmic) toaster-container /deep/ #toast-container .toast-close-button {\\n    right: 0; }\\n  @media (max-width: 399px) {\\n    :host-context(.nb-theme-cosmic) .dropdown-toggle {\\n      font-size: 0.75rem; } }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.scss\n// module id = ../../../../../src/app/pages/components/notifications/notifications.component.scss\n// module chunks = components.module","import { Component } from '@angular/core';\nimport { ToasterService, ToasterConfig, Toast, BodyOutputType } from 'angular2-toaster';\n\nimport 'style-loader!angular2-toaster/toaster.css';\n\n@Component({\n  selector: 'ngx-notifications',\n  styleUrls: ['./notifications.component.scss'],\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  constructor(private toasterService: ToasterService) {}\n\n  config: ToasterConfig;\n\n  position = 'toast-top-right';\n  animationType = 'fade';\n  title = 'HI there!';\n  content = `I'm cool toaster!`;\n  timeout = 5000;\n  toastsLimit = 5;\n  type = 'default';\n\n  isNewestOnTop = true;\n  isHideOnClick = true;\n  isDuplicatesPrevented = false;\n  isCloseButton = true;\n\n  types: string[] = ['default', 'info', 'success', 'warning', 'error'];\n  animations: string[] = ['fade', 'flyLeft', 'flyRight', 'slideDown', 'slideUp'];\n  positions: string[] = ['toast-top-full-width', 'toast-bottom-full-width', 'toast-top-left', 'toast-top-center',\n    'toast-top-right', 'toast-bottom-right', 'toast-bottom-center', 'toast-bottom-left', 'toast-center'];\n\n  quotes = [\n    { title: null, body: 'We rock at <i>Angular</i>' },\n    { title: null, body: 'Titles are not always needed' },\n    { title: null, body: 'Toastr rock!' },\n    { title: 'What about nice html?', body: '<b>Sure you <em>can!</em></b>' },\n  ];\n\n  makeToast() {\n    this.showToast(this.type, this.title, this.content);\n  }\n\n  openRandomToast () {\n    const typeIndex = Math.floor(Math.random() * this.types.length);\n    const quoteIndex = Math.floor(Math.random() * this.quotes.length);\n    const type = this.types[typeIndex];\n    const quote = this.quotes[quoteIndex];\n\n    this.showToast(type, quote.title, quote.body);\n  }\n\n  private showToast(type: string, title: string, body: string) {\n    this.config = new ToasterConfig({\n      positionClass: this.position,\n      timeout: this.timeout,\n      newestOnTop: this.isNewestOnTop,\n      tapToDismiss: this.isHideOnClick,\n      preventDuplicates: this.isDuplicatesPrevented,\n      animation: this.animationType,\n      limit: this.toastsLimit,\n    });\n    const toast: Toast = {\n      type: type,\n      title: title,\n      body: body,\n      timeout: this.timeout,\n      showCloseButton: this.isCloseButton,\n      bodyOutputType: BodyOutputType.TrustedHtml,\n    };\n    this.toasterService.popAsync(toast);\n  }\n\n  clearToasts() {\n    this.toasterService.clear();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/notifications/notifications.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <nb-card>\\n      <nb-card-header>Tree</nb-card-header>\\n      <nb-card-body>\\n        <tree [tree]=\\\"tree\\\"></tree>\\n      </nb-card-body>\\n    </nb-card>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/tree/tree.component.html\n// module id = ../../../../../src/app/pages/components/tree/tree.component.html\n// module chunks = components.module","import { Component } from '@angular/core';\nimport { TreeModel } from 'ng2-tree';\n\n@Component({\n  selector: 'ngx-tree',\n  templateUrl: './tree.component.html',\n})\nexport class TreeComponent {\n\n  tree: TreeModel = {\n    value: 'Programming languages by programming paradigm',\n    children: [{\n      value: 'Object-oriented programming',\n      children: [{\n        value: 'Java',\n      }, {\n        value: 'C++',\n      }, {\n        value: 'C#',\n      }],\n    }, {\n      value: 'Prototype-based programming',\n      children: [{\n        value: 'JavaScript',\n      }, {\n        value: 'CoffeeScript',\n      }, {\n        value: 'Lua',\n      }],\n    }],\n  };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/eimarrangel/Documents/GitHub/s24panel/src/app/pages/components/tree/tree.component.ts","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tree_types_1 = require(\"./src/tree.types\");\nexports.TreeModelSettings = tree_types_1.TreeModelSettings;\nexports.FoldingType = tree_types_1.FoldingType;\nvar tree_1 = require(\"./src/tree\");\nexports.Tree = tree_1.Tree;\nvar menu_events_1 = require(\"./src/menu/menu.events\");\nexports.NodeMenuItemAction = menu_events_1.NodeMenuItemAction;\nvar tree_events_1 = require(\"./src/tree.events\");\nexports.NodeEvent = tree_events_1.NodeEvent;\nexports.NodeCreatedEvent = tree_events_1.NodeCreatedEvent;\nexports.NodeRemovedEvent = tree_events_1.NodeRemovedEvent;\nexports.NodeRenamedEvent = tree_events_1.NodeRenamedEvent;\nexports.NodeMovedEvent = tree_events_1.NodeMovedEvent;\nexports.NodeSelectedEvent = tree_events_1.NodeSelectedEvent;\nexports.NodeExpandedEvent = tree_events_1.NodeExpandedEvent;\nexports.NodeCollapsedEvent = tree_events_1.NodeCollapsedEvent;\nexports.MenuItemSelectedEvent = tree_events_1.MenuItemSelectedEvent;\nexports.NodeDestructiveEvent = tree_events_1.NodeDestructiveEvent;\nvar tree_component_1 = require(\"./src/tree.component\");\nexports.TreeComponent = tree_component_1.TreeComponent;\nvar tree_module_1 = require(\"./src/tree.module\");\nexports.TreeModule = tree_module_1.TreeModule;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/index.js\n// module id = ../../../../ng2-tree/index.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CapturedNode = (function () {\n    function CapturedNode(anElement, aTree) {\n        this.anElement = anElement;\n        this.aTree = aTree;\n    }\n    CapturedNode.prototype.canBeDroppedAt = function (element) {\n        return !this.sameAs(element) && !this.contains(element);\n    };\n    CapturedNode.prototype.contains = function (other) {\n        return this.element.nativeElement.contains(other.nativeElement);\n    };\n    CapturedNode.prototype.sameAs = function (other) {\n        return this.element === other;\n    };\n    Object.defineProperty(CapturedNode.prototype, \"element\", {\n        get: function () {\n            return this.anElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CapturedNode.prototype, \"tree\", {\n        get: function () {\n            return this.aTree;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CapturedNode;\n}());\nexports.CapturedNode = CapturedNode;\n//# sourceMappingURL=captured-node.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/captured-node.js\n// module id = ../../../../ng2-tree/src/draggable/captured-node.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeDraggableEvent = (function () {\n    function NodeDraggableEvent(captured, target) {\n        this.captured = captured;\n        this.target = target;\n    }\n    return NodeDraggableEvent;\n}());\nexports.NodeDraggableEvent = NodeDraggableEvent;\n//# sourceMappingURL=draggable.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/draggable.events.js\n// module id = ../../../../ng2-tree/src/draggable/draggable.events.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar node_draggable_service_1 = require(\"./node-draggable.service\");\nvar captured_node_1 = require(\"./captured-node\");\nvar tree_1 = require(\"../tree\");\nvar NodeDraggableDirective = (function () {\n    function NodeDraggableDirective(element, nodeDraggableService, renderer) {\n        this.element = element;\n        this.nodeDraggableService = nodeDraggableService;\n        this.renderer = renderer;\n        this.disposersForDragListeners = [];\n        this.nodeNativeElement = element.nativeElement;\n    }\n    NodeDraggableDirective.prototype.ngOnInit = function () {\n        if (!this.tree.isStatic()) {\n            this.renderer.setAttribute(this.nodeNativeElement, 'draggable', 'true');\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragenter', this.handleDragEnter.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragover', this.handleDragOver.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragstart', this.handleDragStart.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragleave', this.handleDragLeave.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'drop', this.handleDrop.bind(this)));\n            this.disposersForDragListeners.push(this.renderer.listen(this.nodeNativeElement, 'dragend', this.handleDragEnd.bind(this)));\n        }\n    };\n    NodeDraggableDirective.prototype.ngOnDestroy = function () {\n        /* tslint:disable:typedef */\n        this.disposersForDragListeners.forEach(function (dispose) { return dispose(); });\n        /* tslint:enable:typedef */\n    };\n    NodeDraggableDirective.prototype.handleDragStart = function (e) {\n        e.stopPropagation();\n        this.nodeDraggableService.captureNode(new captured_node_1.CapturedNode(this.nodeDraggable, this.tree));\n        e.dataTransfer.setData('text', NodeDraggableDirective.DATA_TRANSFER_STUB_DATA);\n        e.dataTransfer.effectAllowed = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragOver = function (e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n    };\n    NodeDraggableDirective.prototype.handleDragEnter = function (e) {\n        e.preventDefault();\n        if (this.containsElementAt(e)) {\n            this.addClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDragLeave = function (e) {\n        if (!this.containsElementAt(e)) {\n            this.removeClass('over-drop-target');\n        }\n    };\n    NodeDraggableDirective.prototype.handleDrop = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.removeClass('over-drop-target');\n        if (!this.isDropPossible(e)) {\n            return false;\n        }\n        if (this.nodeDraggableService.getCapturedNode()) {\n            return this.notifyThatNodeWasDropped();\n        }\n    };\n    NodeDraggableDirective.prototype.isDropPossible = function (e) {\n        var capturedNode = this.nodeDraggableService.getCapturedNode();\n        return capturedNode\n            && capturedNode.canBeDroppedAt(this.nodeDraggable)\n            && this.containsElementAt(e);\n    };\n    NodeDraggableDirective.prototype.handleDragEnd = function (e) {\n        this.removeClass('over-drop-target');\n        this.nodeDraggableService.releaseCapturedNode();\n    };\n    NodeDraggableDirective.prototype.containsElementAt = function (e) {\n        var _a = e.x, x = _a === void 0 ? e.clientX : _a, _b = e.y, y = _b === void 0 ? e.clientY : _b;\n        return this.nodeNativeElement.contains(document.elementFromPoint(x, y));\n    };\n    NodeDraggableDirective.prototype.addClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.add(className);\n    };\n    NodeDraggableDirective.prototype.removeClass = function (className) {\n        var classList = this.nodeNativeElement.classList;\n        classList.remove(className);\n    };\n    NodeDraggableDirective.prototype.notifyThatNodeWasDropped = function () {\n        this.nodeDraggableService.fireNodeDragged(this.nodeDraggableService.getCapturedNode(), this.nodeDraggable);\n    };\n    NodeDraggableDirective.DATA_TRANSFER_STUB_DATA = 'some browsers enable drag-n-drop only when dataTransfer has data';\n    NodeDraggableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeDraggable]'\n                },] },\n    ];\n    /** @nocollapse */\n    NodeDraggableDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n        { type: core_1.Renderer2, decorators: [{ type: core_1.Inject, args: [core_1.Renderer2,] },] },\n    ]; };\n    NodeDraggableDirective.propDecorators = {\n        \"nodeDraggable\": [{ type: core_1.Input },],\n        \"tree\": [{ type: core_1.Input },],\n    };\n    return NodeDraggableDirective;\n}());\nexports.NodeDraggableDirective = NodeDraggableDirective;\n//# sourceMappingURL=node-draggable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/node-draggable.directive.js\n// module id = ../../../../ng2-tree/src/draggable/node-draggable.directive.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Subject_1 = require(\"rxjs/Subject\");\nvar draggable_events_1 = require(\"./draggable.events\");\nvar NodeDraggableService = (function () {\n    function NodeDraggableService() {\n        this.draggableNodeEvents$ = new Subject_1.Subject();\n    }\n    NodeDraggableService.prototype.fireNodeDragged = function (captured, target) {\n        if (!captured.tree || captured.tree.isStatic()) {\n            return;\n        }\n        this.draggableNodeEvents$.next(new draggable_events_1.NodeDraggableEvent(captured, target));\n    };\n    NodeDraggableService.prototype.captureNode = function (node) {\n        this.capturedNode = node;\n    };\n    NodeDraggableService.prototype.getCapturedNode = function () {\n        return this.capturedNode;\n    };\n    NodeDraggableService.prototype.releaseCapturedNode = function () {\n        this.capturedNode = null;\n    };\n    NodeDraggableService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    NodeDraggableService.ctorParameters = function () { return []; };\n    return NodeDraggableService;\n}());\nexports.NodeDraggableService = NodeDraggableService;\n//# sourceMappingURL=node-draggable.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/draggable/node-draggable.service.js\n// module id = ../../../../ng2-tree/src/draggable/node-draggable.service.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeEditableEventAction;\n(function (NodeEditableEventAction) {\n    NodeEditableEventAction[NodeEditableEventAction[\"Cancel\"] = 0] = \"Cancel\";\n})(NodeEditableEventAction = exports.NodeEditableEventAction || (exports.NodeEditableEventAction = {}));\n//# sourceMappingURL=editable.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/editable/editable.events.js\n// module id = ../../../../ng2-tree/src/editable/editable.events.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar editable_events_1 = require(\"./editable.events\");\nvar NodeEditableDirective = (function () {\n    function NodeEditableDirective(renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        /* tslint:enable:no-input-rename */\n        this.valueChanged = new core_1.EventEmitter(false);\n    }\n    NodeEditableDirective.prototype.ngOnInit = function () {\n        var nativeElement = this.elementRef.nativeElement;\n        if (nativeElement) {\n            nativeElement.focus();\n        }\n        this.renderer.setProperty(nativeElement, 'value', this.nodeValue);\n    };\n    NodeEditableDirective.prototype.applyNewValue = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'keyup', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.applyNewValueByLoosingFocus = function (newNodeValue) {\n        this.valueChanged.emit({ type: 'blur', value: newNodeValue });\n    };\n    NodeEditableDirective.prototype.cancelEditing = function () {\n        this.valueChanged.emit({\n            type: 'keyup',\n            value: this.nodeValue,\n            action: editable_events_1.NodeEditableEventAction.Cancel\n        });\n    };\n    NodeEditableDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[nodeEditable]'\n                },] },\n    ];\n    /** @nocollapse */\n    NodeEditableDirective.ctorParameters = function () { return [\n        { type: core_1.Renderer2, decorators: [{ type: core_1.Inject, args: [core_1.Renderer2,] },] },\n        { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    ]; };\n    NodeEditableDirective.propDecorators = {\n        \"nodeValue\": [{ type: core_1.Input, args: ['nodeEditable',] },],\n        \"valueChanged\": [{ type: core_1.Output },],\n        \"applyNewValue\": [{ type: core_1.HostListener, args: ['keyup.enter', ['$event.target.value'],] },],\n        \"applyNewValueByLoosingFocus\": [{ type: core_1.HostListener, args: ['blur', ['$event.target.value'],] },],\n        \"cancelEditing\": [{ type: core_1.HostListener, args: ['keyup.esc',] },],\n    };\n    return NodeEditableDirective;\n}());\nexports.NodeEditableDirective = NodeEditableDirective;\n//# sourceMappingURL=node-editable.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/editable/node-editable.directive.js\n// module id = ../../../../ng2-tree/src/editable/node-editable.directive.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeMenuItemAction;\n(function (NodeMenuItemAction) {\n    NodeMenuItemAction[NodeMenuItemAction[\"NewFolder\"] = 0] = \"NewFolder\";\n    NodeMenuItemAction[NodeMenuItemAction[\"NewTag\"] = 1] = \"NewTag\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Rename\"] = 2] = \"Rename\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Remove\"] = 3] = \"Remove\";\n    NodeMenuItemAction[NodeMenuItemAction[\"Custom\"] = 4] = \"Custom\";\n})(NodeMenuItemAction = exports.NodeMenuItemAction || (exports.NodeMenuItemAction = {}));\nvar NodeMenuAction;\n(function (NodeMenuAction) {\n    NodeMenuAction[NodeMenuAction[\"Close\"] = 0] = \"Close\";\n})(NodeMenuAction = exports.NodeMenuAction || (exports.NodeMenuAction = {}));\n//# sourceMappingURL=menu.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/menu.events.js\n// module id = ../../../../ng2-tree/src/menu/menu.events.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar node_menu_service_1 = require(\"./node-menu.service\");\nvar menu_events_1 = require(\"./menu.events\");\nvar event_utils_1 = require(\"../utils/event.utils\");\nvar NodeMenuComponent = (function () {\n    function NodeMenuComponent(renderer, nodeMenuService) {\n        this.renderer = renderer;\n        this.nodeMenuService = nodeMenuService;\n        this.menuItemSelected = new core_1.EventEmitter();\n        this.availableMenuItems = [\n            {\n                name: 'New tag',\n                action: menu_events_1.NodeMenuItemAction.NewTag,\n                cssClass: 'new-tag'\n            },\n            {\n                name: 'New folder',\n                action: menu_events_1.NodeMenuItemAction.NewFolder,\n                cssClass: 'new-folder'\n            },\n            {\n                name: 'Rename',\n                action: menu_events_1.NodeMenuItemAction.Rename,\n                cssClass: 'rename'\n            },\n            {\n                name: 'Remove',\n                action: menu_events_1.NodeMenuItemAction.Remove,\n                cssClass: 'remove'\n            }\n        ];\n        this.disposersForGlobalListeners = [];\n    }\n    NodeMenuComponent.prototype.ngOnInit = function () {\n        this.availableMenuItems = this.menuItems || this.availableMenuItems;\n        this.disposersForGlobalListeners.push(this.renderer.listen('document', 'keyup', this.closeMenu.bind(this)));\n        this.disposersForGlobalListeners.push(this.renderer.listen('document', 'mousedown', this.closeMenu.bind(this)));\n    };\n    NodeMenuComponent.prototype.ngOnDestroy = function () {\n        this.disposersForGlobalListeners.forEach(function (dispose) { return dispose(); });\n    };\n    NodeMenuComponent.prototype.onMenuItemSelected = function (e, selectedMenuItem) {\n        if (event_utils_1.isLeftButtonClicked(e)) {\n            this.menuItemSelected.emit({\n                nodeMenuItemAction: selectedMenuItem.action,\n                nodeMenuItemSelected: selectedMenuItem.name\n            });\n            this.nodeMenuService.fireMenuEvent(e.target, menu_events_1.NodeMenuAction.Close);\n        }\n    };\n    NodeMenuComponent.prototype.closeMenu = function (e) {\n        var mouseClicked = e instanceof MouseEvent;\n        // Check if the click is fired on an element inside a menu\n        var containingTarget = (this.menuContainer.nativeElement !== e.target && this.menuContainer.nativeElement.contains(e.target));\n        if (mouseClicked && !containingTarget || event_utils_1.isEscapePressed(e)) {\n            this.nodeMenuService.fireMenuEvent(e.target, menu_events_1.NodeMenuAction.Close);\n        }\n    };\n    NodeMenuComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'node-menu',\n                    template: \"\\n    <div class=\\\"node-menu\\\">\\n      <ul class=\\\"node-menu-content\\\" #menuContainer>\\n        <li class=\\\"node-menu-item\\\" *ngFor=\\\"let menuItem of availableMenuItems\\\"\\n          (click)=\\\"onMenuItemSelected($event, menuItem)\\\">\\n          <div class=\\\"node-menu-item-icon {{menuItem.cssClass}}\\\"></div>\\n          <span class=\\\"node-menu-item-value\\\">{{menuItem.name}}</span>\\n        </li>\\n      </ul>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    NodeMenuComponent.ctorParameters = function () { return [\n        { type: core_1.Renderer2, decorators: [{ type: core_1.Inject, args: [core_1.Renderer2,] },] },\n        { type: node_menu_service_1.NodeMenuService, decorators: [{ type: core_1.Inject, args: [node_menu_service_1.NodeMenuService,] },] },\n    ]; };\n    NodeMenuComponent.propDecorators = {\n        \"menuItemSelected\": [{ type: core_1.Output },],\n        \"menuItems\": [{ type: core_1.Input },],\n        \"menuContainer\": [{ type: core_1.ViewChild, args: ['menuContainer',] },],\n    };\n    return NodeMenuComponent;\n}());\nexports.NodeMenuComponent = NodeMenuComponent;\n//# sourceMappingURL=node-menu.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/node-menu.component.js\n// module id = ../../../../ng2-tree/src/menu/node-menu.component.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Subject_1 = require(\"rxjs/Subject\");\nvar menu_events_1 = require(\"./menu.events\");\nvar NodeMenuService = (function () {\n    function NodeMenuService() {\n        this.nodeMenuEvents$ = new Subject_1.Subject();\n    }\n    NodeMenuService.prototype.fireMenuEvent = function (sender, action) {\n        var nodeMenuEvent = { sender: sender, action: action };\n        this.nodeMenuEvents$.next(nodeMenuEvent);\n    };\n    NodeMenuService.prototype.hideMenuStream = function (treeElementRef) {\n        return this.nodeMenuEvents$\n            .filter(function (e) { return treeElementRef.nativeElement !== e.sender; })\n            .filter(function (e) { return e.action === menu_events_1.NodeMenuAction.Close; });\n    };\n    NodeMenuService.prototype.hideMenuForAllNodesExcept = function (treeElementRef) {\n        this.nodeMenuEvents$.next({\n            sender: treeElementRef.nativeElement,\n            action: menu_events_1.NodeMenuAction.Close\n        });\n    };\n    NodeMenuService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    NodeMenuService.ctorParameters = function () { return []; };\n    return NodeMenuService;\n}());\nexports.NodeMenuService = NodeMenuService;\n//# sourceMappingURL=node-menu.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/menu/node-menu.service.js\n// module id = ../../../../ng2-tree/src/menu/node-menu.service.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs/add/operator/filter\");\nrequire(\"rxjs/add/observable/of\");\n// This forces angular compiler to generate a \"rxjs-imports.metadata.json\"\n// with a valid metadata instead of \"[null]\"\nexports.noop = function () { };\n//# sourceMappingURL=rxjs-imports.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/rxjs-imports.js\n// module id = ../../../../ng2-tree/src/rxjs-imports.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar menu_events_1 = require(\"./menu/menu.events\");\nvar event_utils_1 = require(\"./utils/event.utils\");\nvar TreeController = (function () {\n    function TreeController(component) {\n        this.component = component;\n        this.tree = this.component.tree;\n        this.treeService = this.component.treeService;\n    }\n    TreeController.prototype.select = function () {\n        if (!this.isSelected()) {\n            this.component.onNodeSelected({ button: event_utils_1.MouseButtons.Left });\n        }\n    };\n    TreeController.prototype.isSelected = function () {\n        return this.component.isSelected;\n    };\n    TreeController.prototype.expand = function () {\n        if (this.isCollapsed()) {\n            this.component.onSwitchFoldingType();\n        }\n    };\n    TreeController.prototype.isExpanded = function () {\n        return this.tree.isNodeExpanded();\n    };\n    TreeController.prototype.collapse = function () {\n        if (this.isExpanded()) {\n            this.component.onSwitchFoldingType();\n        }\n    };\n    TreeController.prototype.isCollapsed = function () {\n        return this.tree.isNodeCollapsed();\n    };\n    TreeController.prototype.toTreeModel = function () {\n        return this.tree.toTreeModel();\n    };\n    TreeController.prototype.rename = function (newValue) {\n        this.tree.markAsBeingRenamed();\n        this.component.applyNewValue({ type: 'keyup', value: newValue });\n    };\n    TreeController.prototype.remove = function () {\n        this.component.onMenuItemSelected({ nodeMenuItemAction: menu_events_1.NodeMenuItemAction.Remove });\n    };\n    TreeController.prototype.addChild = function (newNode) {\n        if (this.tree.hasDeferredChildren() && !this.tree.childrenWereLoaded()) {\n            return;\n        }\n        var newTree = this.tree.createNode(Array.isArray(newNode.children), newNode);\n        this.treeService.fireNodeCreated(newTree);\n    };\n    TreeController.prototype.changeNodeId = function (id) {\n        if (!id) {\n            throw Error('You should supply an id!');\n        }\n        if (this.treeService.hasController(id)) {\n            throw Error(\"Controller already exists for the given id: \" + id);\n        }\n        this.treeService.deleteController(this.tree.id);\n        this.tree.id = id;\n        this.treeService.setController(this.tree.id, this);\n    };\n    TreeController.prototype.reloadChildren = function () {\n        this.tree.reloadChildren();\n    };\n    TreeController.prototype.setChildren = function (children) {\n        if (!this.tree.isLeaf()) {\n            this.tree.setChildren(children);\n        }\n    };\n    TreeController.prototype.startRenaming = function () {\n        this.tree.markAsBeingRenamed();\n    };\n    return TreeController;\n}());\nexports.TreeController = TreeController;\n//# sourceMappingURL=tree-controller.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree-controller.js\n// module id = ../../../../ng2-tree/src/tree-controller.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar TreeTypes = require(\"./tree.types\");\nvar tree_1 = require(\"./tree\");\nvar tree_controller_1 = require(\"./tree-controller\");\nvar node_menu_service_1 = require(\"./menu/node-menu.service\");\nvar menu_events_1 = require(\"./menu/menu.events\");\nvar editable_events_1 = require(\"./editable/editable.events\");\nvar tree_service_1 = require(\"./tree.service\");\nvar EventUtils = require(\"./utils/event.utils\");\nvar fn_utils_1 = require(\"./utils/fn.utils\");\nvar TreeInternalComponent = (function () {\n    function TreeInternalComponent(nodeMenuService, treeService, element) {\n        this.nodeMenuService = nodeMenuService;\n        this.treeService = treeService;\n        this.element = element;\n        this.isSelected = false;\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n        this.subscriptions = [];\n    }\n    TreeInternalComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.controller = new tree_controller_1.TreeController(this);\n        if (fn_utils_1.get(this.tree, 'node.id', '')) {\n            this.treeService.setController(this.tree.node.id, this.controller);\n        }\n        this.settings = this.settings || { rootIsVisible: true };\n        this.subscriptions.push(this.nodeMenuService.hideMenuStream(this.element)\n            .subscribe(function () {\n            _this.isRightMenuVisible = false;\n            _this.isLeftMenuVisible = false;\n        }));\n        this.subscriptions.push(this.treeService.unselectStream(this.tree)\n            .subscribe(function () { return _this.isSelected = false; }));\n        this.subscriptions.push(this.treeService.draggedStream(this.tree, this.element)\n            .subscribe(function (e) {\n            if (_this.tree.hasSibling(e.captured.tree)) {\n                _this.swapWithSibling(e.captured.tree, _this.tree);\n            }\n            else if (_this.tree.isBranch()) {\n                _this.moveNodeToThisTreeAndRemoveFromPreviousOne(e, _this.tree);\n            }\n            else {\n                _this.moveNodeToParentTreeAndRemoveFromPreviousOne(e, _this.tree);\n            }\n        }));\n    };\n    TreeInternalComponent.prototype.ngOnChanges = function (changes) {\n        this.controller = new tree_controller_1.TreeController(this);\n    };\n    TreeInternalComponent.prototype.ngOnDestroy = function () {\n        if (fn_utils_1.get(this.tree, 'node.id', '')) {\n            this.treeService.deleteController(this.tree.node.id);\n        }\n        this.subscriptions.forEach(function (sub) { return sub && sub.unsubscribe(); });\n    };\n    TreeInternalComponent.prototype.swapWithSibling = function (sibling, tree) {\n        tree.swapWithSibling(sibling);\n        this.treeService.fireNodeMoved(sibling, sibling.parent);\n    };\n    TreeInternalComponent.prototype.moveNodeToThisTreeAndRemoveFromPreviousOne = function (e, tree) {\n        this.treeService.fireNodeRemoved(e.captured.tree);\n        var addedChild = tree.addChild(e.captured.tree);\n        this.treeService.fireNodeMoved(addedChild, e.captured.tree.parent);\n    };\n    TreeInternalComponent.prototype.moveNodeToParentTreeAndRemoveFromPreviousOne = function (e, tree) {\n        this.treeService.fireNodeRemoved(e.captured.tree);\n        var addedSibling = tree.addSibling(e.captured.tree, tree.positionInParent);\n        this.treeService.fireNodeMoved(addedSibling, e.captured.tree.parent);\n    };\n    TreeInternalComponent.prototype.onNodeSelected = function (e) {\n        if (EventUtils.isLeftButtonClicked(e)) {\n            this.isSelected = true;\n            this.treeService.fireNodeSelected(this.tree);\n        }\n    };\n    TreeInternalComponent.prototype.showRightMenu = function (e) {\n        if (!this.tree.hasRightMenu()) {\n            return;\n        }\n        if (EventUtils.isRightButtonClicked(e)) {\n            this.isRightMenuVisible = !this.isRightMenuVisible;\n            this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n        }\n        e.preventDefault();\n    };\n    TreeInternalComponent.prototype.showLeftMenu = function (e) {\n        if (!this.tree.hasLeftMenu()) {\n            return;\n        }\n        if (EventUtils.isLeftButtonClicked(e)) {\n            this.isLeftMenuVisible = !this.isLeftMenuVisible;\n            this.nodeMenuService.hideMenuForAllNodesExcept(this.element);\n            if (this.isLeftMenuVisible) {\n                e.preventDefault();\n            }\n        }\n    };\n    TreeInternalComponent.prototype.onMenuItemSelected = function (e) {\n        switch (e.nodeMenuItemAction) {\n            case menu_events_1.NodeMenuItemAction.NewTag:\n                this.onNewSelected(e);\n                break;\n            case menu_events_1.NodeMenuItemAction.NewFolder:\n                this.onNewSelected(e);\n                break;\n            case menu_events_1.NodeMenuItemAction.Rename:\n                this.onRenameSelected();\n                break;\n            case menu_events_1.NodeMenuItemAction.Remove:\n                this.onRemoveSelected();\n                break;\n            case menu_events_1.NodeMenuItemAction.Custom:\n                this.treeService.fireMenuItemSelected(this.tree, e.nodeMenuItemSelected);\n                break;\n            default:\n                throw new Error(\"Chosen menu item doesn't exist\");\n        }\n    };\n    TreeInternalComponent.prototype.onNewSelected = function (e) {\n        this.tree.createNode(e.nodeMenuItemAction === menu_events_1.NodeMenuItemAction.NewFolder);\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onRenameSelected = function () {\n        this.tree.markAsBeingRenamed();\n        this.isRightMenuVisible = false;\n        this.isLeftMenuVisible = false;\n    };\n    TreeInternalComponent.prototype.onRemoveSelected = function () {\n        this.treeService.deleteController(fn_utils_1.get(this.tree, 'node.id', ''));\n        this.treeService.fireNodeRemoved(this.tree);\n    };\n    TreeInternalComponent.prototype.onSwitchFoldingType = function () {\n        this.tree.switchFoldingType();\n        this.treeService.fireNodeSwitchFoldingType(this.tree);\n    };\n    TreeInternalComponent.prototype.applyNewValue = function (e) {\n        if ((e.action === editable_events_1.NodeEditableEventAction.Cancel || this.tree.isNew()) && tree_1.Tree.isValueEmpty(e.value)) {\n            return this.treeService.fireNodeRemoved(this.tree);\n        }\n        if (this.tree.isNew()) {\n            this.tree.value = e.value;\n            this.treeService.fireNodeCreated(this.tree);\n        }\n        if (this.tree.isBeingRenamed()) {\n            var oldValue = this.tree.value;\n            this.tree.value = e.value;\n            this.treeService.fireNodeRenamed(oldValue, this.tree);\n        }\n        this.tree.markAsModified();\n    };\n    TreeInternalComponent.prototype.shouldShowInputForTreeValue = function () {\n        return this.tree.isNew() || this.tree.isBeingRenamed();\n    };\n    TreeInternalComponent.prototype.isRootHidden = function () {\n        return this.tree.isRoot() && !this.settings.rootIsVisible;\n    };\n    TreeInternalComponent.prototype.hasCustomMenu = function () {\n        return this.tree.hasCustomMenu();\n    };\n    TreeInternalComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree-internal',\n                    template: \"\\n  <ul class=\\\"tree\\\" *ngIf=\\\"tree\\\" [ngClass]=\\\"{rootless: isRootHidden()}\\\">\\n    <li>\\n      <div class=\\\"value-container\\\"\\n        [ngClass]=\\\"{rootless: isRootHidden()}\\\"\\n        [class.selected]=\\\"isSelected\\\"\\n        (contextmenu)=\\\"showRightMenu($event)\\\"\\n        [nodeDraggable]=\\\"element\\\"\\n        [tree]=\\\"tree\\\">\\n\\n        <div class=\\\"folding\\\" (click)=\\\"onSwitchFoldingType()\\\" [ngClass]=\\\"tree.foldingCssClass\\\"></div>\\n        <div class=\\\"node-value\\\"\\n          *ngIf=\\\"!shouldShowInputForTreeValue()\\\"\\n          [class.node-selected]=\\\"isSelected\\\"\\n          (click)=\\\"onNodeSelected($event)\\\">\\n            <div *ngIf=\\\"tree.nodeTemplate\\\" class=\\\"node-template\\\" [innerHTML]=\\\"tree.nodeTemplate | safeHtml\\\"></div>\\n            <span *ngIf=\\\"!template\\\" class=\\\"node-name\\\" [innerHTML]=\\\"tree.value | safeHtml\\\"></span>\\n            <span class=\\\"loading-children\\\" *ngIf=\\\"tree.childrenAreBeingLoaded()\\\"></span>\\n            <ng-template [ngTemplateOutlet]=\\\"template\\\" [ngTemplateOutletContext]=\\\"{ $implicit: tree.node }\\\"></ng-template>\\n        </div>\\n\\n        <input type=\\\"text\\\" class=\\\"node-value\\\"\\n           *ngIf=\\\"shouldShowInputForTreeValue()\\\"\\n           [nodeEditable]=\\\"tree.value\\\"\\n           (valueChanged)=\\\"applyNewValue($event)\\\"/>\\n\\n        <div class=\\\"node-left-menu\\\" *ngIf=\\\"tree.hasLeftMenu()\\\" (click)=\\\"showLeftMenu($event)\\\" [innerHTML]=\\\"tree.leftMenuTemplate\\\">\\n        </div>\\n        <node-menu *ngIf=\\\"tree.hasLeftMenu() && isLeftMenuVisible && !hasCustomMenu()\\\"\\n          (menuItemSelected)=\\\"onMenuItemSelected($event)\\\">\\n        </node-menu>\\n      </div>\\n\\n      <node-menu *ngIf=\\\"isRightMenuVisible && !hasCustomMenu()\\\"\\n           (menuItemSelected)=\\\"onMenuItemSelected($event)\\\">\\n      </node-menu>\\n\\n      <node-menu *ngIf=\\\"hasCustomMenu() && (isRightMenuVisible || isLeftMenuVisible)\\\"\\n           [menuItems]=\\\"tree.menuItems\\\"\\n           (menuItemSelected)=\\\"onMenuItemSelected($event)\\\">\\n      </node-menu>\\n      <ng-template [ngIf]=\\\"tree.isNodeExpanded()\\\">\\n        <tree-internal *ngFor=\\\"let child of tree.childrenAsync | async\\\" [tree]=\\\"child\\\" [template]=\\\"template\\\"></tree-internal>\\n      </ng-template>\\n    </li>\\n  </ul>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    TreeInternalComponent.ctorParameters = function () { return [\n        { type: node_menu_service_1.NodeMenuService, },\n        { type: tree_service_1.TreeService, },\n        { type: core_1.ElementRef, },\n    ]; };\n    TreeInternalComponent.propDecorators = {\n        \"tree\": [{ type: core_1.Input },],\n        \"settings\": [{ type: core_1.Input },],\n        \"template\": [{ type: core_1.Input },],\n    };\n    return TreeInternalComponent;\n}());\nexports.TreeInternalComponent = TreeInternalComponent;\n//# sourceMappingURL=tree-internal.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree-internal.component.js\n// module id = ../../../../ng2-tree/src/tree-internal.component.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar tree_service_1 = require(\"./tree.service\");\nvar TreeTypes = require(\"./tree.types\");\nvar tree_1 = require(\"./tree\");\nvar TreeComponent = (function () {\n    function TreeComponent(treeService) {\n        this.treeService = treeService;\n        this.nodeCreated = new core_1.EventEmitter();\n        this.nodeRemoved = new core_1.EventEmitter();\n        this.nodeRenamed = new core_1.EventEmitter();\n        this.nodeSelected = new core_1.EventEmitter();\n        this.nodeMoved = new core_1.EventEmitter();\n        this.nodeExpanded = new core_1.EventEmitter();\n        this.nodeCollapsed = new core_1.EventEmitter();\n        this.menuItemSelected = new core_1.EventEmitter();\n        this.loadNextLevel = new core_1.EventEmitter();\n        this.subscriptions = [];\n    }\n    TreeComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.treeModel) {\n            this.tree = TreeComponent.EMPTY_TREE;\n        }\n        else {\n            this.tree = new tree_1.Tree(this.treeModel);\n        }\n    };\n    TreeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.subscriptions.push(this.treeService.nodeRemoved$.subscribe(function (e) {\n            _this.nodeRemoved.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeRenamed$.subscribe(function (e) {\n            _this.nodeRenamed.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeCreated$.subscribe(function (e) {\n            _this.nodeCreated.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeSelected$.subscribe(function (e) {\n            _this.nodeSelected.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeMoved$.subscribe(function (e) {\n            _this.nodeMoved.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeExpanded$.subscribe(function (e) {\n            _this.nodeExpanded.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.nodeCollapsed$.subscribe(function (e) {\n            _this.nodeCollapsed.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.menuItemSelected$.subscribe(function (e) {\n            _this.menuItemSelected.emit(e);\n        }));\n        this.subscriptions.push(this.treeService.loadNextLevel$.subscribe(function (e) {\n            _this.loadNextLevel.emit(e);\n        }));\n    };\n    TreeComponent.prototype.getController = function () {\n        return this.rootComponent.controller;\n    };\n    TreeComponent.prototype.getControllerByNodeId = function (id) {\n        return this.treeService.getController(id);\n    };\n    TreeComponent.prototype.ngOnDestroy = function () {\n        this.subscriptions.forEach(function (sub) { return sub && sub.unsubscribe(); });\n    };\n    TreeComponent.EMPTY_TREE = new tree_1.Tree({ value: '' });\n    TreeComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'tree',\n                    template: \"<tree-internal #rootComponent [tree]=\\\"tree\\\" [settings]=\\\"settings\\\" [template]=\\\"template\\\"></tree-internal>\",\n                    providers: [tree_service_1.TreeService]\n                },] },\n    ];\n    /** @nocollapse */\n    TreeComponent.ctorParameters = function () { return [\n        { type: tree_service_1.TreeService, decorators: [{ type: core_1.Inject, args: [tree_service_1.TreeService,] },] },\n    ]; };\n    TreeComponent.propDecorators = {\n        \"treeModel\": [{ type: core_1.Input, args: ['tree',] },],\n        \"settings\": [{ type: core_1.Input },],\n        \"nodeCreated\": [{ type: core_1.Output },],\n        \"nodeRemoved\": [{ type: core_1.Output },],\n        \"nodeRenamed\": [{ type: core_1.Output },],\n        \"nodeSelected\": [{ type: core_1.Output },],\n        \"nodeMoved\": [{ type: core_1.Output },],\n        \"nodeExpanded\": [{ type: core_1.Output },],\n        \"nodeCollapsed\": [{ type: core_1.Output },],\n        \"menuItemSelected\": [{ type: core_1.Output },],\n        \"loadNextLevel\": [{ type: core_1.Output },],\n        \"rootComponent\": [{ type: core_1.ViewChild, args: ['rootComponent',] },],\n        \"template\": [{ type: core_1.ContentChild, args: [core_1.TemplateRef,] },],\n    };\n    return TreeComponent;\n}());\nexports.TreeComponent = TreeComponent;\n//# sourceMappingURL=tree.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.component.js\n// module id = ../../../../ng2-tree/src/tree.component.js\n// module chunks = components.module","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeEvent = (function () {\n    function NodeEvent(node) {\n        this.node = node;\n    }\n    return NodeEvent;\n}());\nexports.NodeEvent = NodeEvent;\nvar NodeSelectedEvent = (function (_super) {\n    __extends(NodeSelectedEvent, _super);\n    function NodeSelectedEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return NodeSelectedEvent;\n}(NodeEvent));\nexports.NodeSelectedEvent = NodeSelectedEvent;\nvar NodeDestructiveEvent = (function (_super) {\n    __extends(NodeDestructiveEvent, _super);\n    function NodeDestructiveEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return NodeDestructiveEvent;\n}(NodeEvent));\nexports.NodeDestructiveEvent = NodeDestructiveEvent;\nvar NodeMovedEvent = (function (_super) {\n    __extends(NodeMovedEvent, _super);\n    function NodeMovedEvent(node, previousParent) {\n        var _this = _super.call(this, node) || this;\n        _this.previousParent = previousParent;\n        return _this;\n    }\n    return NodeMovedEvent;\n}(NodeDestructiveEvent));\nexports.NodeMovedEvent = NodeMovedEvent;\nvar NodeRemovedEvent = (function (_super) {\n    __extends(NodeRemovedEvent, _super);\n    function NodeRemovedEvent(node, lastIndex) {\n        var _this = _super.call(this, node) || this;\n        _this.lastIndex = lastIndex;\n        return _this;\n    }\n    return NodeRemovedEvent;\n}(NodeDestructiveEvent));\nexports.NodeRemovedEvent = NodeRemovedEvent;\nvar NodeCreatedEvent = (function (_super) {\n    __extends(NodeCreatedEvent, _super);\n    function NodeCreatedEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return NodeCreatedEvent;\n}(NodeDestructiveEvent));\nexports.NodeCreatedEvent = NodeCreatedEvent;\nvar NodeRenamedEvent = (function (_super) {\n    __extends(NodeRenamedEvent, _super);\n    function NodeRenamedEvent(node, oldValue, newValue) {\n        var _this = _super.call(this, node) || this;\n        _this.oldValue = oldValue;\n        _this.newValue = newValue;\n        return _this;\n    }\n    return NodeRenamedEvent;\n}(NodeDestructiveEvent));\nexports.NodeRenamedEvent = NodeRenamedEvent;\nvar NodeExpandedEvent = (function (_super) {\n    __extends(NodeExpandedEvent, _super);\n    function NodeExpandedEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return NodeExpandedEvent;\n}(NodeEvent));\nexports.NodeExpandedEvent = NodeExpandedEvent;\nvar NodeCollapsedEvent = (function (_super) {\n    __extends(NodeCollapsedEvent, _super);\n    function NodeCollapsedEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return NodeCollapsedEvent;\n}(NodeEvent));\nexports.NodeCollapsedEvent = NodeCollapsedEvent;\nvar MenuItemSelectedEvent = (function (_super) {\n    __extends(MenuItemSelectedEvent, _super);\n    function MenuItemSelectedEvent(node, selectedItem) {\n        var _this = _super.call(this, node) || this;\n        _this.selectedItem = selectedItem;\n        return _this;\n    }\n    return MenuItemSelectedEvent;\n}(NodeEvent));\nexports.MenuItemSelectedEvent = MenuItemSelectedEvent;\nvar LoadNextLevelEvent = (function (_super) {\n    __extends(LoadNextLevelEvent, _super);\n    function LoadNextLevelEvent(node) {\n        return _super.call(this, node) || this;\n    }\n    return LoadNextLevelEvent;\n}(NodeEvent));\nexports.LoadNextLevelEvent = LoadNextLevelEvent;\n//# sourceMappingURL=tree.events.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.events.js\n// module id = ../../../../ng2-tree/src/tree.events.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fn_utils_1 = require(\"./utils/fn.utils\");\nvar Observable_1 = require(\"rxjs/Observable\");\nvar tree_types_1 = require(\"./tree.types\");\nvar uuidv4 = require(\"uuid/v4\");\nvar ChildrenLoadingState;\n(function (ChildrenLoadingState) {\n    ChildrenLoadingState[ChildrenLoadingState[\"NotStarted\"] = 0] = \"NotStarted\";\n    ChildrenLoadingState[ChildrenLoadingState[\"Loading\"] = 1] = \"Loading\";\n    ChildrenLoadingState[ChildrenLoadingState[\"Completed\"] = 2] = \"Completed\";\n})(ChildrenLoadingState || (ChildrenLoadingState = {}));\nvar Tree = (function () {\n    /**\n     * Build an instance of Tree from an object implementing TreeModel interface.\n     * @param {TreeModel} model - A model that is used to build a tree.\n     * @param {Tree} [parent] - An optional parent if you want to build a tree from the model that should be a child of an existing Tree instance.\n     * @param {boolean} [isBranch] - An option that makes a branch from created tree. Branch can have children.\n     */\n    function Tree(node, parent, isBranch) {\n        if (parent === void 0) { parent = null; }\n        if (isBranch === void 0) { isBranch = false; }\n        var _this = this;\n        this._childrenLoadingState = ChildrenLoadingState.NotStarted;\n        this._childrenAsyncOnce = fn_utils_1.once(function () {\n            return new Observable_1.Observable(function (observer) {\n                setTimeout(function () {\n                    _this._childrenLoadingState = ChildrenLoadingState.Loading;\n                    _this._loadChildren(function (children) {\n                        _this._children = (children || []).map(function (child) { return new Tree(child, _this); });\n                        _this._childrenLoadingState = ChildrenLoadingState.Completed;\n                        observer.next(_this.children);\n                        observer.complete();\n                    });\n                });\n            });\n        });\n        this.buildTreeFromModel(node, parent, isBranch || Array.isArray(node.children));\n    }\n    // STATIC METHODS ----------------------------------------------------------------------------------------------------\n    /**\n     * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\n     * @param {string} value - A value that should be checked.\n     * @returns {boolean} - A flag indicating that value is empty or not.\n     * @static\n     */\n    // STATIC METHODS ----------------------------------------------------------------------------------------------------\n    /**\n       * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\n       * @param {string} value - A value that should be checked.\n       * @returns {boolean} - A flag indicating that value is empty or not.\n       * @static\n       */\n    Tree.isValueEmpty = \n    // STATIC METHODS ----------------------------------------------------------------------------------------------------\n    /**\n       * Check that value passed is not empty (it doesn't consist of only whitespace symbols).\n       * @param {string} value - A value that should be checked.\n       * @returns {boolean} - A flag indicating that value is empty or not.\n       * @static\n       */\n    function (value) {\n        return fn_utils_1.isEmpty(fn_utils_1.trim(value));\n    };\n    /**\n     * Check whether a given value can be considered RenamableNode.\n     * @param {any} value - A value to check.\n     * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\n     * @static\n     */\n    /**\n       * Check whether a given value can be considered RenamableNode.\n       * @param {any} value - A value to check.\n       * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\n       * @static\n       */\n    Tree.isRenamable = /**\n       * Check whether a given value can be considered RenamableNode.\n       * @param {any} value - A value to check.\n       * @returns {boolean} - A flag indicating whether given value is Renamable node or not.\n       * @static\n       */\n    function (value) {\n        return (fn_utils_1.has(value, 'setName') && fn_utils_1.isFunction(value.setName))\n            && (fn_utils_1.has(value, 'toString') && fn_utils_1.isFunction(value.toString) && value.toString !== Object.toString);\n    };\n    Tree.cloneTreeShallow = function (origin) {\n        var tree = new Tree(Object.assign({}, origin.node));\n        tree._children = origin._children;\n        return tree;\n    };\n    Tree.applyNewValueToRenamable = function (value, newValue) {\n        var renamableValue = Object.assign({}, value);\n        renamableValue.setName(newValue);\n        return renamableValue;\n    };\n    Tree.prototype.buildTreeFromModel = function (model, parent, isBranch) {\n        var _this = this;\n        this.parent = parent;\n        this.node = Object.assign(fn_utils_1.omit(model, 'children'), {\n            settings: tree_types_1.TreeModelSettings.merge(model, fn_utils_1.get(parent, 'node'))\n        }, { emitLoadNextLevel: model.emitLoadNextLevel === true });\n        if (fn_utils_1.isFunction(this.node.loadChildren)) {\n            this._loadChildren = this.node.loadChildren;\n        }\n        else {\n            fn_utils_1.get(model, 'children', []).forEach(function (child, index) {\n                _this._addChild(new Tree(child, _this), index);\n            });\n        }\n        if (!Array.isArray(this._children)) {\n            this._children = this.node.loadChildren || isBranch ? [] : null;\n        }\n    };\n    Tree.prototype.hasDeferredChildren = function () {\n        return typeof this._loadChildren === 'function';\n    };\n    /* Setting the children loading state to Loading since a request was dispatched to the client */\n    /* Setting the children loading state to Loading since a request was dispatched to the client */\n    Tree.prototype.loadingChildrenRequested = /* Setting the children loading state to Loading since a request was dispatched to the client */\n    function () {\n        this._childrenLoadingState = ChildrenLoadingState.Loading;\n    };\n    /**\n     * Check whether children of the node are being loaded.\n     * Makes sense only for nodes that define `loadChildren` function.\n     * @returns {boolean} A flag indicating that children are being loaded.\n     */\n    /**\n       * Check whether children of the node are being loaded.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children are being loaded.\n       */\n    Tree.prototype.childrenAreBeingLoaded = /**\n       * Check whether children of the node are being loaded.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children are being loaded.\n       */\n    function () {\n        return (this._childrenLoadingState === ChildrenLoadingState.Loading);\n    };\n    /**\n     * Check whether children of the node were loaded.\n     * Makes sense only for nodes that define `loadChildren` function.\n     * @returns {boolean} A flag indicating that children were loaded.\n     */\n    /**\n       * Check whether children of the node were loaded.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children were loaded.\n       */\n    Tree.prototype.childrenWereLoaded = /**\n       * Check whether children of the node were loaded.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children were loaded.\n       */\n    function () {\n        return (this._childrenLoadingState === ChildrenLoadingState.Completed);\n    };\n    Tree.prototype.canLoadChildren = function () {\n        return (this._childrenLoadingState === ChildrenLoadingState.NotStarted)\n            && (this.foldingType === tree_types_1.FoldingType.Expanded)\n            && (!!this._loadChildren);\n    };\n    /**\n     * Check whether children of the node should be loaded and not loaded yet.\n     * Makes sense only for nodes that define `loadChildren` function.\n     * @returns {boolean} A flag indicating that children should be loaded for the current node.\n     */\n    /**\n       * Check whether children of the node should be loaded and not loaded yet.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children should be loaded for the current node.\n       */\n    Tree.prototype.childrenShouldBeLoaded = /**\n       * Check whether children of the node should be loaded and not loaded yet.\n       * Makes sense only for nodes that define `loadChildren` function.\n       * @returns {boolean} A flag indicating that children should be loaded for the current node.\n       */\n    function () {\n        return !this.childrenWereLoaded() && (!!this._loadChildren || this.node.emitLoadNextLevel === true);\n    };\n    Object.defineProperty(Tree.prototype, \"children\", {\n        /**\n         * Get children of the current tree.\n         * @returns {Tree[]} The children of the current tree.\n         */\n        get: /**\n           * Get children of the current tree.\n           * @returns {Tree[]} The children of the current tree.\n           */\n        function () {\n            return this._children;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"childrenAsync\", {\n        /**\n         * By getting value from this property you start process of loading node's children using `loadChildren` function.\n         * Once children are loaded `loadChildren` function won't be called anymore and loaded for the first time children are emitted in case of subsequent calls.\n         * @returns {Observable<Tree[]>} An observable which emits children once they are loaded.\n         */\n        get: /**\n           * By getting value from this property you start process of loading node's children using `loadChildren` function.\n           * Once children are loaded `loadChildren` function won't be called anymore and loaded for the first time children are emitted in case of subsequent calls.\n           * @returns {Observable<Tree[]>} An observable which emits children once they are loaded.\n           */\n        function () {\n            if (this.canLoadChildren()) {\n                return this._childrenAsyncOnce();\n            }\n            return Observable_1.Observable.of(this.children);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * By calling this method you start process of loading node's children using `loadChildren` function.\n     */\n    /**\n       * By calling this method you start process of loading node's children using `loadChildren` function.\n       */\n    Tree.prototype.reloadChildren = /**\n       * By calling this method you start process of loading node's children using `loadChildren` function.\n       */\n    function () {\n        var _this = this;\n        if (this.childrenShouldBeLoaded()) {\n            this._childrenLoadingState = ChildrenLoadingState.Loading;\n            this._loadChildren(function (children) {\n                _this._children = children && children.map(function (child) { return new Tree(child, _this); });\n                _this._childrenLoadingState = ChildrenLoadingState.Completed;\n            });\n        }\n    };\n    /**\n     * By calling this method you will remove all current children of a treee and create new.\n     */\n    /**\n       * By calling this method you will remove all current children of a treee and create new.\n       */\n    Tree.prototype.setChildren = /**\n       * By calling this method you will remove all current children of a treee and create new.\n       */\n    function (children) {\n        var _this = this;\n        this._children = children && children.map(function (child) { return new Tree(child, _this); });\n        if (this.childrenShouldBeLoaded()) {\n            this._childrenLoadingState = ChildrenLoadingState.Completed;\n        }\n    };\n    /**\n     * Create a new node in the current tree.\n     * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\n     * @param {TreeModel} model - Tree model of the new node which will be inserted. Empty node will be created by default and it will fire edit mode of this node\n     * @returns {Tree} A newly created child node.\n     */\n    /**\n       * Create a new node in the current tree.\n       * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\n       * @param {TreeModel} model - Tree model of the new node which will be inserted. Empty node will be created by default and it will fire edit mode of this node\n       * @returns {Tree} A newly created child node.\n       */\n    Tree.prototype.createNode = /**\n       * Create a new node in the current tree.\n       * @param {boolean} isBranch - A flag that indicates whether a new node should be a \"Branch\". \"Leaf\" node will be created by default\n       * @param {TreeModel} model - Tree model of the new node which will be inserted. Empty node will be created by default and it will fire edit mode of this node\n       * @returns {Tree} A newly created child node.\n       */\n    function (isBranch, model) {\n        if (model === void 0) { model = { value: '' }; }\n        var tree = new Tree(model, this, isBranch);\n        if (!model.id) {\n            tree.markAsNew();\n        }\n        tree.id = tree.id || uuidv4();\n        if (this.childrenShouldBeLoaded() && !(this.childrenAreBeingLoaded() || this.childrenWereLoaded())) {\n            return null;\n        }\n        if (this.isLeaf()) {\n            return this.addSibling(tree);\n        }\n        else {\n            return this.addChild(tree);\n        }\n    };\n    Object.defineProperty(Tree.prototype, \"value\", {\n        /**\n         * Get the value of the current node\n         * @returns {(string|RenamableNode)} The value of the node.\n         */\n        get: /**\n           * Get the value of the current node\n           * @returns {(string|RenamableNode)} The value of the node.\n           */\n        function () {\n            return this.node.value;\n        },\n        /**\n         * Set the value of the current node\n         * @param {(string|RenamableNode)} value - The new value of the node.\n         */\n        set: /**\n           * Set the value of the current node\n           * @param {(string|RenamableNode)} value - The new value of the node.\n           */\n        function (value) {\n            if (typeof value !== 'string' && !Tree.isRenamable(value)) {\n                return;\n            }\n            var stringifiedValue = '' + value;\n            if (Tree.isRenamable(this.value)) {\n                this.node.value = Tree.applyNewValueToRenamable(this.value, stringifiedValue);\n            }\n            else {\n                this.node.value = Tree.isValueEmpty(stringifiedValue) ? this.node.value : stringifiedValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Add a sibling node for the current node. This won't work if the current node is a root.\n     * @param {Tree} sibling - A node that should become a sibling.\n     * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\n     * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\n     */\n    /**\n       * Add a sibling node for the current node. This won't work if the current node is a root.\n       * @param {Tree} sibling - A node that should become a sibling.\n       * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\n       * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\n       */\n    Tree.prototype.addSibling = /**\n       * Add a sibling node for the current node. This won't work if the current node is a root.\n       * @param {Tree} sibling - A node that should become a sibling.\n       * @param [number] position - Position in which sibling will be inserted. By default it will be inserted at the last position in a parent.\n       * @returns {Tree} A newly inserted sibling, or null if you are trying to make a sibling for the root.\n       */\n    function (sibling, position) {\n        if (Array.isArray(fn_utils_1.get(this.parent, 'children'))) {\n            return this.parent.addChild(sibling, position);\n        }\n        return null;\n    };\n    /**\n     * Add a child node for the current node.\n     * @param {Tree} child - A node that should become a child.\n     * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\n     * @returns {Tree} A newly inserted child.\n     */\n    /**\n       * Add a child node for the current node.\n       * @param {Tree} child - A node that should become a child.\n       * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\n       * @returns {Tree} A newly inserted child.\n       */\n    Tree.prototype.addChild = /**\n       * Add a child node for the current node.\n       * @param {Tree} child - A node that should become a child.\n       * @param [number] position - Position in which child will be inserted. By default it will be inserted at the last position in a parent.\n       * @returns {Tree} A newly inserted child.\n       */\n    function (child, position) {\n        var newborn = this._addChild(Tree.cloneTreeShallow(child), position);\n        this._setFoldingType();\n        if (this.isNodeCollapsed()) {\n            this.switchFoldingType();\n        }\n        return newborn;\n    };\n    Tree.prototype._addChild = function (child, position) {\n        if (position === void 0) { position = fn_utils_1.size(this._children) || 0; }\n        child.parent = this;\n        if (Array.isArray(this._children)) {\n            this._children.splice(position, 0, child);\n        }\n        else {\n            this._children = [child];\n        }\n        return child;\n    };\n    /**\n     * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\n     * @param {Tree} sibling - A sibling with which current node shold be swapped.\n     */\n    /**\n       * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\n       * @param {Tree} sibling - A sibling with which current node shold be swapped.\n       */\n    Tree.prototype.swapWithSibling = /**\n       * Swap position of the current node with the given sibling. If node passed as a parameter is not a sibling - nothing happens.\n       * @param {Tree} sibling - A sibling with which current node shold be swapped.\n       */\n    function (sibling) {\n        if (!this.hasSibling(sibling)) {\n            return;\n        }\n        var siblingIndex = sibling.positionInParent;\n        var thisTreeIndex = this.positionInParent;\n        this.parent._children[siblingIndex] = this;\n        this.parent._children[thisTreeIndex] = sibling;\n    };\n    Object.defineProperty(Tree.prototype, \"positionInParent\", {\n        /**\n         * Get a node's position in its parent.\n         * @returns {number} The position inside a parent.\n         */\n        get: /**\n           * Get a node's position in its parent.\n           * @returns {number} The position inside a parent.\n           */\n        function () {\n            if (this.isRoot()) {\n                return -1;\n            }\n            return this.parent.children ? this.parent.children.indexOf(this) : -1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check whether or not this tree is static.\n     * @returns {boolean} A flag indicating whether or not this tree is static.\n     */\n    /**\n       * Check whether or not this tree is static.\n       * @returns {boolean} A flag indicating whether or not this tree is static.\n       */\n    Tree.prototype.isStatic = /**\n       * Check whether or not this tree is static.\n       * @returns {boolean} A flag indicating whether or not this tree is static.\n       */\n    function () {\n        return fn_utils_1.get(this.node.settings, 'static', false);\n    };\n    /**\n     * Check whether or not this tree has a left menu.\n     * @returns {boolean} A flag indicating whether or not this tree has a left menu.\n     */\n    /**\n       * Check whether or not this tree has a left menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a left menu.\n       */\n    Tree.prototype.hasLeftMenu = /**\n       * Check whether or not this tree has a left menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a left menu.\n       */\n    function () {\n        return !fn_utils_1.get(this.node.settings, 'static', false) && fn_utils_1.get(this.node.settings, 'leftMenu', false);\n    };\n    /**\n     * Check whether or not this tree has a right menu.\n     * @returns {boolean} A flag indicating whether or not this tree has a right menu.\n     */\n    /**\n       * Check whether or not this tree has a right menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a right menu.\n       */\n    Tree.prototype.hasRightMenu = /**\n       * Check whether or not this tree has a right menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a right menu.\n       */\n    function () {\n        return !fn_utils_1.get(this.node.settings, 'static', false) && fn_utils_1.get(this.node.settings, 'rightMenu', false);\n    };\n    /**\n     * Check whether this tree is \"Leaf\" or not.\n     * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\n     */\n    /**\n       * Check whether this tree is \"Leaf\" or not.\n       * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\n       */\n    Tree.prototype.isLeaf = /**\n       * Check whether this tree is \"Leaf\" or not.\n       * @returns {boolean} A flag indicating whether or not this tree is a \"Leaf\".\n       */\n    function () {\n        return !this.isBranch();\n    };\n    Object.defineProperty(Tree.prototype, \"menuItems\", {\n        /**\n         * Get menu items of the current tree.\n         * @returns {NodeMenuItem[]} The menu items of the current tree.\n         */\n        get: /**\n           * Get menu items of the current tree.\n           * @returns {NodeMenuItem[]} The menu items of the current tree.\n           */\n        function () {\n            return fn_utils_1.get(this.node.settings, 'menuItems');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Check whether or not this tree has a custom menu.\n     * @returns {boolean} A flag indicating whether or not this tree has a custom menu.\n     */\n    /**\n       * Check whether or not this tree has a custom menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a custom menu.\n       */\n    Tree.prototype.hasCustomMenu = /**\n       * Check whether or not this tree has a custom menu.\n       * @returns {boolean} A flag indicating whether or not this tree has a custom menu.\n       */\n    function () {\n        return !this.isStatic() && !!fn_utils_1.get(this.node.settings, 'menuItems', false);\n    };\n    /**\n     * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\n     * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\n     */\n    /**\n       * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\n       * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\n       */\n    Tree.prototype.isBranch = /**\n       * Check whether this tree is \"Branch\" or not. \"Branch\" is a node that has children.\n       * @returns {boolean} A flag indicating whether or not this tree is a \"Branch\".\n       */\n    function () {\n        return this.node.emitLoadNextLevel === true || Array.isArray(this._children);\n    };\n    /**\n     * Check whether this tree has children.\n     * @returns {boolean} A flag indicating whether or not this tree has children.\n     */\n    /**\n       * Check whether this tree has children.\n       * @returns {boolean} A flag indicating whether or not this tree has children.\n       */\n    Tree.prototype.hasChildren = /**\n       * Check whether this tree has children.\n       * @returns {boolean} A flag indicating whether or not this tree has children.\n       */\n    function () {\n        return !fn_utils_1.isEmpty(this._children) || this.childrenShouldBeLoaded();\n    };\n    /**\n     * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\n     * @returns {boolean} A flag indicating whether or not this tree is the root.\n     */\n    /**\n       * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\n       * @returns {boolean} A flag indicating whether or not this tree is the root.\n       */\n    Tree.prototype.isRoot = /**\n       * Check whether this tree is a root or not. The root is the tree (node) that doesn't have parent (or technically its parent is null).\n       * @returns {boolean} A flag indicating whether or not this tree is the root.\n       */\n    function () {\n        return fn_utils_1.isNil(this.parent);\n    };\n    /**\n     * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\n     * @param {Tree} tree - A tree that should be tested on a siblingness.\n     * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\n     */\n    /**\n       * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\n       * @param {Tree} tree - A tree that should be tested on a siblingness.\n       * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\n       */\n    Tree.prototype.hasSibling = /**\n       * Check whether provided tree is a sibling of the current tree. Sibling trees (nodes) are the trees that have the same parent.\n       * @param {Tree} tree - A tree that should be tested on a siblingness.\n       * @returns {boolean} A flag indicating whether or not provided tree is the sibling of the current one.\n       */\n    function (tree) {\n        return !this.isRoot() && fn_utils_1.includes(this.parent.children, tree);\n    };\n    /**\n     * Check whether provided tree is a child of the current tree.\n     * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\n     * @param {Tree} tree - A tree that should be tested (child candidate).\n     * @returns {boolean} A flag indicating whether provided tree is a child or not.\n     */\n    /**\n       * Check whether provided tree is a child of the current tree.\n       * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\n       * @param {Tree} tree - A tree that should be tested (child candidate).\n       * @returns {boolean} A flag indicating whether provided tree is a child or not.\n       */\n    Tree.prototype.hasChild = /**\n       * Check whether provided tree is a child of the current tree.\n       * This method tests that provided tree is a <strong>direct</strong> child of the current tree.\n       * @param {Tree} tree - A tree that should be tested (child candidate).\n       * @returns {boolean} A flag indicating whether provided tree is a child or not.\n       */\n    function (tree) {\n        return fn_utils_1.includes(this._children, tree);\n    };\n    /**\n     * Remove given tree from the current tree.\n     * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\n     * @param {Tree} tree - A tree that should be removed.\n     */\n    /**\n       * Remove given tree from the current tree.\n       * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\n       * @param {Tree} tree - A tree that should be removed.\n       */\n    Tree.prototype.removeChild = /**\n       * Remove given tree from the current tree.\n       * The given tree will be removed only in case it is a direct child of the current tree (@see {@link hasChild}).\n       * @param {Tree} tree - A tree that should be removed.\n       */\n    function (tree) {\n        if (!this.hasChildren()) {\n            return;\n        }\n        var childIndex = this._children.findIndex(function (child) { return child === tree; });\n        if (childIndex >= 0) {\n            this._children.splice(childIndex, 1);\n        }\n        this._setFoldingType();\n    };\n    /**\n     * Remove current tree from its parent.\n     */\n    /**\n       * Remove current tree from its parent.\n       */\n    Tree.prototype.removeItselfFromParent = /**\n       * Remove current tree from its parent.\n       */\n    function () {\n        if (!this.parent) {\n            return;\n        }\n        this.parent.removeChild(this);\n    };\n    /**\n     * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\n     * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\n     */\n    /**\n       * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\n       * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\n       */\n    Tree.prototype.switchFoldingType = /**\n       * Switch folding type of the current tree. \"Leaf\" node cannot switch its folding type cause it doesn't have children, hence nothing to fold.\n       * If node is a \"Branch\" and it is expanded, then by invoking current method state of the tree should be switched to \"collapsed\" and vice versa.\n       */\n    function () {\n        if (this.isLeaf() || !this.hasChildren()) {\n            return;\n        }\n        this.disableCollapseOnInit();\n        this.node._foldingType = this.isNodeExpanded() ? tree_types_1.FoldingType.Collapsed : tree_types_1.FoldingType.Expanded;\n    };\n    /**\n     * Check that tree is expanded.\n     * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\n     */\n    /**\n       * Check that tree is expanded.\n       * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\n       */\n    Tree.prototype.isNodeExpanded = /**\n       * Check that tree is expanded.\n       * @returns {boolean} A flag indicating whether current tree is expanded. Always returns false for the \"Leaf\" tree and for an empty tree.\n       */\n    function () {\n        return this.foldingType === tree_types_1.FoldingType.Expanded;\n    };\n    /**\n     * Check that tree is collapsed.\n     * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\n     */\n    /**\n       * Check that tree is collapsed.\n       * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\n       */\n    Tree.prototype.isNodeCollapsed = /**\n       * Check that tree is collapsed.\n       * @returns {boolean} A flag indicating whether current tree is collapsed. Always returns false for the \"Leaf\" tree and for an empty tree.\n       */\n    function () {\n        return this.foldingType === tree_types_1.FoldingType.Collapsed;\n    };\n    /**\n     * Set a current folding type: expanded, collapsed or leaf.\n     */\n    /**\n       * Set a current folding type: expanded, collapsed or leaf.\n       */\n    Tree.prototype._setFoldingType = /**\n       * Set a current folding type: expanded, collapsed or leaf.\n       */\n    function () {\n        if (this.childrenShouldBeLoaded()) {\n            this.node._foldingType = tree_types_1.FoldingType.Collapsed;\n        }\n        else if (this._children && !fn_utils_1.isEmpty(this._children)) {\n            this.node._foldingType = this.isCollapsedOnInit() ? tree_types_1.FoldingType.Collapsed : tree_types_1.FoldingType.Expanded;\n        }\n        else if (Array.isArray(this._children)) {\n            this.node._foldingType = tree_types_1.FoldingType.Empty;\n        }\n        else {\n            this.node._foldingType = tree_types_1.FoldingType.Leaf;\n        }\n    };\n    Object.defineProperty(Tree.prototype, \"foldingType\", {\n        /**\n         * Get a current folding type: expanded, collapsed or leaf.\n         * @returns {FoldingType} A folding type of the current tree.\n         */\n        get: /**\n           * Get a current folding type: expanded, collapsed or leaf.\n           * @returns {FoldingType} A folding type of the current tree.\n           */\n        function () {\n            if (!this.node._foldingType) {\n                this._setFoldingType();\n            }\n            return this.node._foldingType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Tree.prototype, \"foldingCssClass\", {\n        /**\n         * Get a css class for element which displayes folding state - expanded, collapsed or leaf\n         * @returns {string} A string icontaining css class (classes)\n         */\n        get: /**\n           * Get a css class for element which displayes folding state - expanded, collapsed or leaf\n           * @returns {string} A string icontaining css class (classes)\n           */\n        function () {\n            return this.getCssClassesFromSettings() || this.foldingType.cssClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.getCssClassesFromSettings = function () {\n        if (!this.node._foldingType) {\n            this._setFoldingType();\n        }\n        if (this.node._foldingType === tree_types_1.FoldingType.Collapsed) {\n            return fn_utils_1.get(this.node.settings, 'cssClasses.collapsed', null);\n        }\n        else if (this.node._foldingType === tree_types_1.FoldingType.Expanded) {\n            return fn_utils_1.get(this.node.settings, 'cssClasses.expanded', null);\n        }\n        else if (this.node._foldingType === tree_types_1.FoldingType.Empty) {\n            return fn_utils_1.get(this.node.settings, 'cssClasses.empty', null);\n        }\n        return fn_utils_1.get(this.node.settings, 'cssClasses.leaf', null);\n    };\n    Object.defineProperty(Tree.prototype, \"nodeTemplate\", {\n        /**\n         * Get a html template to render before every node's name.\n         * @returns {string} A string representing a html template.\n         */\n        get: /**\n           * Get a html template to render before every node's name.\n           * @returns {string} A string representing a html template.\n           */\n        function () {\n            return this.getTemplateFromSettings();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.getTemplateFromSettings = function () {\n        if (this.isLeaf()) {\n            return fn_utils_1.get(this.node.settings, 'templates.leaf', '');\n        }\n        else {\n            return fn_utils_1.get(this.node.settings, 'templates.node', '');\n        }\n    };\n    Object.defineProperty(Tree.prototype, \"leftMenuTemplate\", {\n        /**\n         * Get a html template to render for an element activatin left menu of a node.\n         * @returns {string} A string representing a html template.\n         */\n        get: /**\n           * Get a html template to render for an element activatin left menu of a node.\n           * @returns {string} A string representing a html template.\n           */\n        function () {\n            if (this.hasLeftMenu()) {\n                return fn_utils_1.get(this.node.settings, 'templates.leftMenu', '<span></span>');\n            }\n            return '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Tree.prototype.disableCollapseOnInit = function () {\n        if (this.node.settings) {\n            this.node.settings.isCollapsedOnInit = false;\n        }\n    };\n    Tree.prototype.isCollapsedOnInit = function () {\n        return !!fn_utils_1.get(this.node.settings, 'isCollapsedOnInit');\n    };\n    /**\n     * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\n     * @returns {boolean} A flag whether the tree is new.\n     */\n    /**\n       * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\n       * @returns {boolean} A flag whether the tree is new.\n       */\n    Tree.prototype.isNew = /**\n       * Check that current tree is newly created (added by user via menu for example). Tree that was built from the TreeModel is not marked as new.\n       * @returns {boolean} A flag whether the tree is new.\n       */\n    function () {\n        return this.node._status === tree_types_1.TreeStatus.New;\n    };\n    Object.defineProperty(Tree.prototype, \"id\", {\n        get: function () {\n            return fn_utils_1.get(this.node, 'id');\n        },\n        set: function (id) {\n            this.node.id = id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Mark current tree as new (@see {@link isNew}).\n     */\n    /**\n       * Mark current tree as new (@see {@link isNew}).\n       */\n    Tree.prototype.markAsNew = /**\n       * Mark current tree as new (@see {@link isNew}).\n       */\n    function () {\n        this.node._status = tree_types_1.TreeStatus.New;\n    };\n    /**\n     * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\n     * @returns {boolean} A flag whether the tree is being renamed.\n     */\n    /**\n       * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\n       * @returns {boolean} A flag whether the tree is being renamed.\n       */\n    Tree.prototype.isBeingRenamed = /**\n       * Check that current tree is being renamed (it is in the process of its value renaming initiated by a user).\n       * @returns {boolean} A flag whether the tree is being renamed.\n       */\n    function () {\n        return this.node._status === tree_types_1.TreeStatus.IsBeingRenamed;\n    };\n    /**\n     * Mark current tree as being renamed (@see {@link isBeingRenamed}).\n     */\n    /**\n       * Mark current tree as being renamed (@see {@link isBeingRenamed}).\n       */\n    Tree.prototype.markAsBeingRenamed = /**\n       * Mark current tree as being renamed (@see {@link isBeingRenamed}).\n       */\n    function () {\n        this.node._status = tree_types_1.TreeStatus.IsBeingRenamed;\n    };\n    /**\n     * Check that current tree is modified (for example it was renamed).\n     * @returns {boolean} A flag whether the tree is modified.\n     */\n    /**\n       * Check that current tree is modified (for example it was renamed).\n       * @returns {boolean} A flag whether the tree is modified.\n       */\n    Tree.prototype.isModified = /**\n       * Check that current tree is modified (for example it was renamed).\n       * @returns {boolean} A flag whether the tree is modified.\n       */\n    function () {\n        return this.node._status === tree_types_1.TreeStatus.Modified;\n    };\n    /**\n     * Mark current tree as modified (@see {@link isModified}).\n     */\n    /**\n       * Mark current tree as modified (@see {@link isModified}).\n       */\n    Tree.prototype.markAsModified = /**\n       * Mark current tree as modified (@see {@link isModified}).\n       */\n    function () {\n        this.node._status = tree_types_1.TreeStatus.Modified;\n    };\n    /**\n     * Makes a clone of an underlying TreeModel instance\n     * @returns {TreeModel} a clone of an underlying TreeModel instance\n     */\n    /**\n       * Makes a clone of an underlying TreeModel instance\n       * @returns {TreeModel} a clone of an underlying TreeModel instance\n       */\n    Tree.prototype.toTreeModel = /**\n       * Makes a clone of an underlying TreeModel instance\n       * @returns {TreeModel} a clone of an underlying TreeModel instance\n       */\n    function () {\n        var model = fn_utils_1.defaultsDeep(this.isLeaf() ? {} : { children: [] }, this.node);\n        if (this.children) {\n            this.children.forEach(function (child) {\n                model.children.push(child.toTreeModel());\n            });\n        }\n        return model;\n    };\n    return Tree;\n}());\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.js\n// module id = ../../../../ng2-tree/src/tree.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./rxjs-imports\");\nvar core_1 = require(\"@angular/core\");\nvar tree_component_1 = require(\"./tree.component\");\nvar tree_internal_component_1 = require(\"./tree-internal.component\");\nvar common_1 = require(\"@angular/common\");\nvar node_draggable_directive_1 = require(\"./draggable/node-draggable.directive\");\nvar node_draggable_service_1 = require(\"./draggable/node-draggable.service\");\nvar node_editable_directive_1 = require(\"./editable/node-editable.directive\");\nvar node_menu_component_1 = require(\"./menu/node-menu.component\");\nvar node_menu_service_1 = require(\"./menu/node-menu.service\");\nvar tree_service_1 = require(\"./tree.service\");\nvar safe_html_pipe_1 = require(\"./utils/safe-html.pipe\");\nvar TreeModule = (function () {\n    function TreeModule() {\n    }\n    TreeModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [common_1.CommonModule],\n                    declarations: [\n                        node_draggable_directive_1.NodeDraggableDirective,\n                        tree_component_1.TreeComponent,\n                        node_editable_directive_1.NodeEditableDirective,\n                        node_menu_component_1.NodeMenuComponent,\n                        tree_internal_component_1.TreeInternalComponent,\n                        safe_html_pipe_1.SafeHtmlPipe\n                    ],\n                    exports: [tree_component_1.TreeComponent],\n                    providers: [node_draggable_service_1.NodeDraggableService, node_menu_service_1.NodeMenuService, tree_service_1.TreeService]\n                },] },\n    ];\n    /** @nocollapse */\n    TreeModule.ctorParameters = function () { return []; };\n    return TreeModule;\n}());\nexports.TreeModule = TreeModule;\n//# sourceMappingURL=tree.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.module.js\n// module id = ../../../../ng2-tree/src/tree.module.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tree_events_1 = require(\"./tree.events\");\nvar Subject_1 = require(\"rxjs/Subject\");\nvar core_1 = require(\"@angular/core\");\nvar node_draggable_service_1 = require(\"./draggable/node-draggable.service\");\nvar fn_utils_1 = require(\"./utils/fn.utils\");\nvar TreeService = (function () {\n    function TreeService(nodeDraggableService) {\n        this.nodeDraggableService = nodeDraggableService;\n        this.nodeMoved$ = new Subject_1.Subject();\n        this.nodeRemoved$ = new Subject_1.Subject();\n        this.nodeRenamed$ = new Subject_1.Subject();\n        this.nodeCreated$ = new Subject_1.Subject();\n        this.nodeSelected$ = new Subject_1.Subject();\n        this.nodeExpanded$ = new Subject_1.Subject();\n        this.nodeCollapsed$ = new Subject_1.Subject();\n        this.menuItemSelected$ = new Subject_1.Subject();\n        this.loadNextLevel$ = new Subject_1.Subject();\n        this.controllers = new Map();\n        this.nodeRemoved$.subscribe(function (e) { return e.node.removeItselfFromParent(); });\n    }\n    TreeService.prototype.unselectStream = function (tree) {\n        return this.nodeSelected$.filter(function (e) { return tree !== e.node; });\n    };\n    TreeService.prototype.fireNodeRemoved = function (tree) {\n        this.nodeRemoved$.next(new tree_events_1.NodeRemovedEvent(tree, tree.positionInParent));\n    };\n    TreeService.prototype.fireNodeCreated = function (tree) {\n        this.nodeCreated$.next(new tree_events_1.NodeCreatedEvent(tree));\n    };\n    TreeService.prototype.fireNodeSelected = function (tree) {\n        this.nodeSelected$.next(new tree_events_1.NodeSelectedEvent(tree));\n    };\n    TreeService.prototype.fireNodeRenamed = function (oldValue, tree) {\n        this.nodeRenamed$.next(new tree_events_1.NodeRenamedEvent(tree, oldValue, tree.value));\n    };\n    TreeService.prototype.fireNodeMoved = function (tree, parent) {\n        this.nodeMoved$.next(new tree_events_1.NodeMovedEvent(tree, parent));\n    };\n    TreeService.prototype.fireMenuItemSelected = function (tree, selectedItem) {\n        this.menuItemSelected$.next(new tree_events_1.MenuItemSelectedEvent(tree, selectedItem));\n    };\n    TreeService.prototype.fireNodeSwitchFoldingType = function (tree) {\n        if (tree.isNodeExpanded()) {\n            this.fireNodeExpanded(tree);\n            if (this.shouldFireLoadNextLevel(tree)) {\n                this.fireLoadNextLevel(tree);\n            }\n        }\n        else if (tree.isNodeCollapsed()) {\n            this.fireNodeCollapsed(tree);\n        }\n    };\n    TreeService.prototype.fireNodeExpanded = function (tree) {\n        this.nodeExpanded$.next(new tree_events_1.NodeExpandedEvent(tree));\n    };\n    TreeService.prototype.fireNodeCollapsed = function (tree) {\n        this.nodeCollapsed$.next(new tree_events_1.NodeCollapsedEvent(tree));\n    };\n    TreeService.prototype.fireLoadNextLevel = function (tree) {\n        this.loadNextLevel$.next(new tree_events_1.LoadNextLevelEvent(tree));\n    };\n    TreeService.prototype.draggedStream = function (tree, element) {\n        return this.nodeDraggableService.draggableNodeEvents$\n            .filter(function (e) { return e.target === element; })\n            .filter(function (e) { return !e.captured.tree.hasChild(tree); });\n    };\n    TreeService.prototype.setController = function (id, controller) {\n        this.controllers.set(id, controller);\n    };\n    TreeService.prototype.deleteController = function (id) {\n        if (this.controllers.has(id)) {\n            this.controllers.delete(id);\n        }\n    };\n    TreeService.prototype.getController = function (id) {\n        if (this.controllers.has(id)) {\n            return this.controllers.get(id);\n        }\n        return null;\n    };\n    TreeService.prototype.hasController = function (id) {\n        return this.controllers.has(id);\n    };\n    TreeService.prototype.shouldFireLoadNextLevel = function (tree) {\n        var shouldLoadNextLevel = tree.node.emitLoadNextLevel &&\n            !tree.node.loadChildren &&\n            !tree.childrenAreBeingLoaded() &&\n            (!tree.children || fn_utils_1.isEmpty(tree.children));\n        if (shouldLoadNextLevel) {\n            tree.loadingChildrenRequested();\n        }\n        return shouldLoadNextLevel;\n    };\n    TreeService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    TreeService.ctorParameters = function () { return [\n        { type: node_draggable_service_1.NodeDraggableService, decorators: [{ type: core_1.Inject, args: [node_draggable_service_1.NodeDraggableService,] },] },\n    ]; };\n    return TreeService;\n}());\nexports.TreeService = TreeService;\n//# sourceMappingURL=tree.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.service.js\n// module id = ../../../../ng2-tree/src/tree.service.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fn_utils_1 = require(\"./utils/fn.utils\");\nvar FoldingType = (function () {\n    function FoldingType(_cssClass) {\n        this._cssClass = _cssClass;\n    }\n    Object.defineProperty(FoldingType.prototype, \"cssClass\", {\n        get: function () {\n            return this._cssClass;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FoldingType.Expanded = new FoldingType('node-expanded');\n    FoldingType.Collapsed = new FoldingType('node-collapsed');\n    FoldingType.Empty = new FoldingType('node-empty');\n    FoldingType.Leaf = new FoldingType('node-leaf');\n    return FoldingType;\n}());\nexports.FoldingType = FoldingType;\nvar TreeModelSettings = (function () {\n    function TreeModelSettings() {\n    }\n    TreeModelSettings.merge = function (sourceA, sourceB) {\n        return fn_utils_1.defaultsDeep({}, fn_utils_1.get(sourceA, 'settings'), fn_utils_1.get(sourceB, 'settings'), { static: false, leftMenu: false, rightMenu: true, isCollapsedOnInit: false });\n    };\n    return TreeModelSettings;\n}());\nexports.TreeModelSettings = TreeModelSettings;\nvar TreeStatus;\n(function (TreeStatus) {\n    TreeStatus[TreeStatus[\"New\"] = 0] = \"New\";\n    TreeStatus[TreeStatus[\"Modified\"] = 1] = \"Modified\";\n    TreeStatus[TreeStatus[\"IsBeingRenamed\"] = 2] = \"IsBeingRenamed\";\n})(TreeStatus = exports.TreeStatus || (exports.TreeStatus = {}));\n//# sourceMappingURL=tree.types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/tree.types.js\n// module id = ../../../../ng2-tree/src/tree.types.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Keys;\n(function (Keys) {\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n})(Keys = exports.Keys || (exports.Keys = {}));\nvar MouseButtons;\n(function (MouseButtons) {\n    MouseButtons[MouseButtons[\"Left\"] = 0] = \"Left\";\n    MouseButtons[MouseButtons[\"Right\"] = 2] = \"Right\";\n})(MouseButtons = exports.MouseButtons || (exports.MouseButtons = {}));\nfunction isLeftButtonClicked(e) {\n    return e.button === MouseButtons.Left;\n}\nexports.isLeftButtonClicked = isLeftButtonClicked;\nfunction isRightButtonClicked(e) {\n    return e.button === MouseButtons.Right;\n}\nexports.isRightButtonClicked = isRightButtonClicked;\nfunction isEscapePressed(e) {\n    return e.keyCode === Keys.Escape;\n}\nexports.isEscapePressed = isEscapePressed;\n//# sourceMappingURL=event.utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/event.utils.js\n// module id = ../../../../ng2-tree/src/utils/event.utils.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isEmpty(value) {\n    if (typeof value === 'string') {\n        return !/\\S/.test(value);\n    }\n    if (Array.isArray(value)) {\n        return value.length === 0;\n    }\n    return isNil(value);\n}\nexports.isEmpty = isEmpty;\nfunction trim(value) {\n    return isNil(value) ? '' : value.trim();\n}\nexports.trim = trim;\nfunction has(value, prop) {\n    return value && typeof value === 'object' && value.hasOwnProperty(prop);\n}\nexports.has = has;\nfunction isFunction(value) {\n    return typeof value === 'function';\n}\nexports.isFunction = isFunction;\nfunction get(value, path, defaultValue) {\n    var result = value;\n    for (var _i = 0, _a = path.split('.'); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        if (!result || !Reflect.has(result, prop)) {\n            return defaultValue;\n        }\n        result = result[prop];\n    }\n    return isNil(result) || result === value ? defaultValue : result;\n}\nexports.get = get;\nfunction omit(value, propToSkip) {\n    return Object\n        .keys(value)\n        .reduce(function (result, prop) {\n        if (prop === propToSkip) {\n            return result;\n        }\n        return Object.assign(result, (_a = {}, _a[prop] = value[prop], _a));\n        var _a;\n    }, {});\n}\nexports.omit = omit;\nfunction size(value) {\n    return isEmpty(value) ? 0 : value.length;\n}\nexports.size = size;\nfunction once(fn) {\n    var result;\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (fn) {\n            result = fn.apply(null, args);\n            fn = null;\n        }\n        return result;\n    };\n}\nexports.once = once;\nfunction defaultsDeep(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    return [target].concat(sources).reduce(function (result, source) {\n        if (!source) {\n            return result;\n        }\n        Object.keys(source).forEach(function (prop) {\n            if (isNil(result[prop])) {\n                result[prop] = source[prop];\n                return;\n            }\n            if (typeof result[prop] === 'object' && !Array.isArray(result[prop])) {\n                result[prop] = defaultsDeep(result[prop], source[prop]);\n                return;\n            }\n        });\n        return result;\n    }, {});\n}\nexports.defaultsDeep = defaultsDeep;\nfunction includes(target, value) {\n    if (isNil(target)) {\n        return false;\n    }\n    var index = typeof target === 'string' ? target.indexOf(value) : target.indexOf(value);\n    return index > -1;\n}\nexports.includes = includes;\nfunction isNil(value) {\n    return value === undefined || value === null;\n}\nexports.isNil = isNil;\n//# sourceMappingURL=fn.utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/fn.utils.js\n// module id = ../../../../ng2-tree/src/utils/fn.utils.js\n// module chunks = components.module","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar SafeHtmlPipe = (function () {\n    function SafeHtmlPipe(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    SafeHtmlPipe.prototype.transform = function (value) {\n        // return value;\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    };\n    SafeHtmlPipe.decorators = [\n        { type: core_1.Pipe, args: [{ name: 'safeHtml' },] },\n    ];\n    /** @nocollapse */\n    SafeHtmlPipe.ctorParameters = function () { return [\n        { type: platform_browser_1.DomSanitizer, },\n    ]; };\n    return SafeHtmlPipe;\n}());\nexports.SafeHtmlPipe = SafeHtmlPipe;\n//# sourceMappingURL=safe-html.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/ng2-tree/src/utils/safe-html.pipe.js\n// module id = ../../../../ng2-tree/src/utils/safe-html.pipe.js\n// module chunks = components.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_filter PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { filter } from '../../operator/filter';\nObservable.prototype.filter = filter;\n//# sourceMappingURL=filter.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/rxjs/_esm5/add/operator/filter.js\n// module id = ../../../../rxjs/_esm5/add/operator/filter.js\n// module chunks = components.module","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/lib/bytesToUuid.js\n// module id = ../../../../uuid/lib/bytesToUuid.js\n// module chunks = components.module","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/lib/rng-browser.js\n// module id = ../../../../uuid/lib/rng-browser.js\n// module chunks = components.module","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/eimarrangel/Documents/GitHub/s24panel/node_modules/uuid/v4.js\n// module id = ../../../../uuid/v4.js\n// module chunks = components.module"],"sourceRoot":"webpack:///"}